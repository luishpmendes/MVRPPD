#include "../solution/Solution.hpp"
#include <cassert>
#include <cfloat>
#include <cmath>
#include <limits>

int main() {
    Instance instance;
    std::vector<std::vector<unsigned int>> paths;
    Solution solution;

    instance = Instance("instances/test.in");

    paths = std::vector<std::vector<unsigned int>>(2);

    paths[0].push_back(instance.getSourceK(0)); //  0
    paths[0].push_back(instance.getSourceR(3)); // 10
    paths[0].push_back(instance.getTargetR(3)); // 11
    paths[0].push_back(instance.getSourceR(4)); // 12
    paths[0].push_back(instance.getSourceR(0)); //  4
    paths[0].push_back(instance.getSourceR(1)); //  6
    paths[0].push_back(instance.getTargetR(1)); //  7
    paths[0].push_back(instance.getTargetR(0)); //  5
    paths[0].push_back(instance.getTargetR(4)); // 13
    paths[0].push_back(instance.getTargetK(0)); //  1

    paths[1].push_back(instance.getSourceK(1)); //  2
    paths[1].push_back(instance.getSourceR(6)); // 16
    paths[1].push_back(instance.getSourceR(7)); // 18
    paths[1].push_back(instance.getTargetR(7)); // 19
    paths[1].push_back(instance.getSourceR(5)); // 14
    paths[1].push_back(instance.getTargetR(5)); // 15
    paths[1].push_back(instance.getTargetR(6)); // 17
    paths[1].push_back(instance.getTargetK(1)); //  3

    solution = Solution(instance, paths);

    assert(solution.isFeasible());
    assert(solution.areConstraintsSatisfied());

    assert(solution.getPaths().size() == 2);

    assert(solution.getPath(0).size() == 10);
    assert(solution.getPath(0)[0] == 0);
    assert(solution.getPath(0)[1] == 10);
    assert(solution.getPath(0)[2] == 11);
    assert(solution.getPath(0)[3] == 12);
    assert(solution.getPath(0)[4] == 4);
    assert(solution.getPath(0)[5] == 6);
    assert(solution.getPath(0)[6] == 7);
    assert(solution.getPath(0)[7] == 5);
    assert(solution.getPath(0)[8] == 13);
    assert(solution.getPath(0)[9] == 1);

    assert(solution.getPath(1).size() == 8);
    assert(solution.getPath(1)[0] == 2);
    assert(solution.getPath(1)[1] == 16);
    assert(solution.getPath(1)[2] == 18);
    assert(solution.getPath(1)[3] == 19);
    assert(solution.getPath(1)[4] == 14);
    assert(solution.getPath(1)[5] == 15);
    assert(solution.getPath(1)[6] == 17);
    assert(solution.getPath(1)[7] == 3);

    assert(solution.getX().size() == 20);

    assert(solution.getX()[0].size() == 20);
    assert(solution.getX()[0][0].size() == 2);
    assert(solution.getX()[0][1].size() == 2);
    assert(solution.getX()[0][2].size() == 2);
    assert(solution.getX()[0][3].size() == 2);
    assert(solution.getX()[0][4].size() == 2);
    assert(solution.getX()[0][5].size() == 2);
    assert(solution.getX()[0][6].size() == 2);
    assert(solution.getX()[0][7].size() == 2);
    assert(solution.getX()[0][8].size() == 2);
    assert(solution.getX()[0][9].size() == 2);
    assert(solution.getX()[0][10].size() == 2);
    assert(solution.getX()[0][11].size() == 2);
    assert(solution.getX()[0][12].size() == 2);
    assert(solution.getX()[0][13].size() == 2);
    assert(solution.getX()[0][14].size() == 2);
    assert(solution.getX()[0][15].size() == 2);
    assert(solution.getX()[0][16].size() == 2);
    assert(solution.getX()[0][17].size() == 2);
    assert(solution.getX()[0][18].size() == 2);
    assert(solution.getX()[0][19].size() == 2);

    assert(solution.getX()[1].size() == 20);
    assert(solution.getX()[1][0].size() == 2);
    assert(solution.getX()[1][1].size() == 2);
    assert(solution.getX()[1][2].size() == 2);
    assert(solution.getX()[1][3].size() == 2);
    assert(solution.getX()[1][4].size() == 2);
    assert(solution.getX()[1][5].size() == 2);
    assert(solution.getX()[1][6].size() == 2);
    assert(solution.getX()[1][7].size() == 2);
    assert(solution.getX()[1][8].size() == 2);
    assert(solution.getX()[1][9].size() == 2);
    assert(solution.getX()[1][10].size() == 2);
    assert(solution.getX()[1][11].size() == 2);
    assert(solution.getX()[1][12].size() == 2);
    assert(solution.getX()[1][13].size() == 2);
    assert(solution.getX()[1][14].size() == 2);
    assert(solution.getX()[1][15].size() == 2);
    assert(solution.getX()[1][16].size() == 2);
    assert(solution.getX()[1][17].size() == 2);
    assert(solution.getX()[1][18].size() == 2);
    assert(solution.getX()[1][19].size() == 2);

    assert(solution.getX()[2].size() == 20);
    assert(solution.getX()[2][0].size() == 2);
    assert(solution.getX()[2][1].size() == 2);
    assert(solution.getX()[2][2].size() == 2);
    assert(solution.getX()[2][3].size() == 2);
    assert(solution.getX()[2][4].size() == 2);
    assert(solution.getX()[2][5].size() == 2);
    assert(solution.getX()[2][6].size() == 2);
    assert(solution.getX()[2][7].size() == 2);
    assert(solution.getX()[2][8].size() == 2);
    assert(solution.getX()[2][9].size() == 2);
    assert(solution.getX()[2][10].size() == 2);
    assert(solution.getX()[2][11].size() == 2);
    assert(solution.getX()[2][12].size() == 2);
    assert(solution.getX()[2][13].size() == 2);
    assert(solution.getX()[2][14].size() == 2);
    assert(solution.getX()[2][15].size() == 2);
    assert(solution.getX()[2][16].size() == 2);
    assert(solution.getX()[2][17].size() == 2);
    assert(solution.getX()[2][18].size() == 2);
    assert(solution.getX()[2][19].size() == 2);

    assert(solution.getX()[3].size() == 20);
    assert(solution.getX()[3][0].size() == 2);
    assert(solution.getX()[3][1].size() == 2);
    assert(solution.getX()[3][2].size() == 2);
    assert(solution.getX()[3][3].size() == 2);
    assert(solution.getX()[3][4].size() == 2);
    assert(solution.getX()[3][5].size() == 2);
    assert(solution.getX()[3][6].size() == 2);
    assert(solution.getX()[3][7].size() == 2);
    assert(solution.getX()[3][8].size() == 2);
    assert(solution.getX()[3][9].size() == 2);
    assert(solution.getX()[3][10].size() == 2);
    assert(solution.getX()[3][11].size() == 2);
    assert(solution.getX()[3][12].size() == 2);
    assert(solution.getX()[3][13].size() == 2);
    assert(solution.getX()[3][14].size() == 2);
    assert(solution.getX()[3][15].size() == 2);
    assert(solution.getX()[3][16].size() == 2);
    assert(solution.getX()[3][17].size() == 2);
    assert(solution.getX()[3][18].size() == 2);
    assert(solution.getX()[3][19].size() == 2);

    assert(solution.getX()[4].size() == 20);
    assert(solution.getX()[4][0].size() == 2);
    assert(solution.getX()[4][1].size() == 2);
    assert(solution.getX()[4][2].size() == 2);
    assert(solution.getX()[4][3].size() == 2);
    assert(solution.getX()[4][4].size() == 2);
    assert(solution.getX()[4][5].size() == 2);
    assert(solution.getX()[4][6].size() == 2);
    assert(solution.getX()[4][7].size() == 2);
    assert(solution.getX()[4][8].size() == 2);
    assert(solution.getX()[4][9].size() == 2);
    assert(solution.getX()[4][10].size() == 2);
    assert(solution.getX()[4][11].size() == 2);
    assert(solution.getX()[4][12].size() == 2);
    assert(solution.getX()[4][13].size() == 2);
    assert(solution.getX()[4][14].size() == 2);
    assert(solution.getX()[4][15].size() == 2);
    assert(solution.getX()[4][16].size() == 2);
    assert(solution.getX()[4][17].size() == 2);
    assert(solution.getX()[4][18].size() == 2);
    assert(solution.getX()[4][19].size() == 2);

    assert(solution.getX()[5].size() == 20);
    assert(solution.getX()[5][0].size() == 2);
    assert(solution.getX()[5][1].size() == 2);
    assert(solution.getX()[5][2].size() == 2);
    assert(solution.getX()[5][3].size() == 2);
    assert(solution.getX()[5][4].size() == 2);
    assert(solution.getX()[5][5].size() == 2);
    assert(solution.getX()[5][6].size() == 2);
    assert(solution.getX()[5][7].size() == 2);
    assert(solution.getX()[5][8].size() == 2);
    assert(solution.getX()[5][9].size() == 2);
    assert(solution.getX()[5][10].size() == 2);
    assert(solution.getX()[5][11].size() == 2);
    assert(solution.getX()[5][12].size() == 2);
    assert(solution.getX()[5][13].size() == 2);
    assert(solution.getX()[5][14].size() == 2);
    assert(solution.getX()[5][15].size() == 2);
    assert(solution.getX()[5][16].size() == 2);
    assert(solution.getX()[5][17].size() == 2);
    assert(solution.getX()[5][18].size() == 2);
    assert(solution.getX()[5][19].size() == 2);

    assert(solution.getX()[6].size() == 20);
    assert(solution.getX()[6][0].size() == 2);
    assert(solution.getX()[6][1].size() == 2);
    assert(solution.getX()[6][2].size() == 2);
    assert(solution.getX()[6][3].size() == 2);
    assert(solution.getX()[6][4].size() == 2);
    assert(solution.getX()[6][5].size() == 2);
    assert(solution.getX()[6][6].size() == 2);
    assert(solution.getX()[6][7].size() == 2);
    assert(solution.getX()[6][8].size() == 2);
    assert(solution.getX()[6][9].size() == 2);
    assert(solution.getX()[6][10].size() == 2);
    assert(solution.getX()[6][11].size() == 2);
    assert(solution.getX()[6][12].size() == 2);
    assert(solution.getX()[6][13].size() == 2);
    assert(solution.getX()[6][14].size() == 2);
    assert(solution.getX()[6][15].size() == 2);
    assert(solution.getX()[6][16].size() == 2);
    assert(solution.getX()[6][17].size() == 2);
    assert(solution.getX()[6][18].size() == 2);
    assert(solution.getX()[6][19].size() == 2);

    assert(solution.getX()[7].size() == 20);
    assert(solution.getX()[7][0].size() == 2);
    assert(solution.getX()[7][1].size() == 2);
    assert(solution.getX()[7][2].size() == 2);
    assert(solution.getX()[7][3].size() == 2);
    assert(solution.getX()[7][4].size() == 2);
    assert(solution.getX()[7][5].size() == 2);
    assert(solution.getX()[7][6].size() == 2);
    assert(solution.getX()[7][7].size() == 2);
    assert(solution.getX()[7][8].size() == 2);
    assert(solution.getX()[7][9].size() == 2);
    assert(solution.getX()[7][10].size() == 2);
    assert(solution.getX()[7][11].size() == 2);
    assert(solution.getX()[7][12].size() == 2);
    assert(solution.getX()[7][13].size() == 2);
    assert(solution.getX()[7][14].size() == 2);
    assert(solution.getX()[7][15].size() == 2);
    assert(solution.getX()[7][16].size() == 2);
    assert(solution.getX()[7][17].size() == 2);
    assert(solution.getX()[7][18].size() == 2);
    assert(solution.getX()[7][19].size() == 2);

    assert(solution.getX()[8].size() == 20);
    assert(solution.getX()[8][0].size() == 2);
    assert(solution.getX()[8][1].size() == 2);
    assert(solution.getX()[8][2].size() == 2);
    assert(solution.getX()[8][3].size() == 2);
    assert(solution.getX()[8][4].size() == 2);
    assert(solution.getX()[8][5].size() == 2);
    assert(solution.getX()[8][6].size() == 2);
    assert(solution.getX()[8][7].size() == 2);
    assert(solution.getX()[8][8].size() == 2);
    assert(solution.getX()[8][9].size() == 2);
    assert(solution.getX()[8][10].size() == 2);
    assert(solution.getX()[8][11].size() == 2);
    assert(solution.getX()[8][12].size() == 2);
    assert(solution.getX()[8][13].size() == 2);
    assert(solution.getX()[8][14].size() == 2);
    assert(solution.getX()[8][15].size() == 2);
    assert(solution.getX()[8][16].size() == 2);
    assert(solution.getX()[8][17].size() == 2);
    assert(solution.getX()[8][18].size() == 2);
    assert(solution.getX()[8][19].size() == 2);

    assert(solution.getX()[9].size() == 20);
    assert(solution.getX()[9][0].size() == 2);
    assert(solution.getX()[9][1].size() == 2);
    assert(solution.getX()[9][2].size() == 2);
    assert(solution.getX()[9][3].size() == 2);
    assert(solution.getX()[9][4].size() == 2);
    assert(solution.getX()[9][5].size() == 2);
    assert(solution.getX()[9][6].size() == 2);
    assert(solution.getX()[9][7].size() == 2);
    assert(solution.getX()[9][8].size() == 2);
    assert(solution.getX()[9][9].size() == 2);
    assert(solution.getX()[9][10].size() == 2);
    assert(solution.getX()[9][11].size() == 2);
    assert(solution.getX()[9][12].size() == 2);
    assert(solution.getX()[9][13].size() == 2);
    assert(solution.getX()[9][14].size() == 2);
    assert(solution.getX()[9][15].size() == 2);
    assert(solution.getX()[9][16].size() == 2);
    assert(solution.getX()[9][17].size() == 2);
    assert(solution.getX()[9][18].size() == 2);
    assert(solution.getX()[9][19].size() == 2);

    assert(solution.getX()[10].size() == 20);
    assert(solution.getX()[10][0].size() == 2);
    assert(solution.getX()[10][1].size() == 2);
    assert(solution.getX()[10][2].size() == 2);
    assert(solution.getX()[10][3].size() == 2);
    assert(solution.getX()[10][4].size() == 2);
    assert(solution.getX()[10][5].size() == 2);
    assert(solution.getX()[10][6].size() == 2);
    assert(solution.getX()[10][7].size() == 2);
    assert(solution.getX()[10][8].size() == 2);
    assert(solution.getX()[10][9].size() == 2);
    assert(solution.getX()[10][10].size() == 2);
    assert(solution.getX()[10][11].size() == 2);
    assert(solution.getX()[10][12].size() == 2);
    assert(solution.getX()[10][13].size() == 2);
    assert(solution.getX()[10][14].size() == 2);
    assert(solution.getX()[10][15].size() == 2);
    assert(solution.getX()[10][16].size() == 2);
    assert(solution.getX()[10][17].size() == 2);
    assert(solution.getX()[10][18].size() == 2);
    assert(solution.getX()[10][19].size() == 2);

    assert(solution.getX()[11].size() == 20);
    assert(solution.getX()[11][0].size() == 2);
    assert(solution.getX()[11][1].size() == 2);
    assert(solution.getX()[11][2].size() == 2);
    assert(solution.getX()[11][3].size() == 2);
    assert(solution.getX()[11][4].size() == 2);
    assert(solution.getX()[11][5].size() == 2);
    assert(solution.getX()[11][6].size() == 2);
    assert(solution.getX()[11][7].size() == 2);
    assert(solution.getX()[11][8].size() == 2);
    assert(solution.getX()[11][9].size() == 2);
    assert(solution.getX()[11][10].size() == 2);
    assert(solution.getX()[11][11].size() == 2);
    assert(solution.getX()[11][12].size() == 2);
    assert(solution.getX()[11][13].size() == 2);
    assert(solution.getX()[11][14].size() == 2);
    assert(solution.getX()[11][15].size() == 2);
    assert(solution.getX()[11][16].size() == 2);
    assert(solution.getX()[11][17].size() == 2);
    assert(solution.getX()[11][18].size() == 2);
    assert(solution.getX()[11][19].size() == 2);

    assert(solution.getX()[12].size() == 20);
    assert(solution.getX()[12][0].size() == 2);
    assert(solution.getX()[12][1].size() == 2);
    assert(solution.getX()[12][2].size() == 2);
    assert(solution.getX()[12][3].size() == 2);
    assert(solution.getX()[12][4].size() == 2);
    assert(solution.getX()[12][5].size() == 2);
    assert(solution.getX()[12][6].size() == 2);
    assert(solution.getX()[12][7].size() == 2);
    assert(solution.getX()[12][8].size() == 2);
    assert(solution.getX()[12][9].size() == 2);
    assert(solution.getX()[12][10].size() == 2);
    assert(solution.getX()[12][11].size() == 2);
    assert(solution.getX()[12][12].size() == 2);
    assert(solution.getX()[12][13].size() == 2);
    assert(solution.getX()[12][14].size() == 2);
    assert(solution.getX()[12][15].size() == 2);
    assert(solution.getX()[12][16].size() == 2);
    assert(solution.getX()[12][17].size() == 2);
    assert(solution.getX()[12][18].size() == 2);
    assert(solution.getX()[12][19].size() == 2);

    assert(solution.getX()[13].size() == 20);
    assert(solution.getX()[13][0].size() == 2);
    assert(solution.getX()[13][1].size() == 2);
    assert(solution.getX()[13][2].size() == 2);
    assert(solution.getX()[13][3].size() == 2);
    assert(solution.getX()[13][4].size() == 2);
    assert(solution.getX()[13][5].size() == 2);
    assert(solution.getX()[13][6].size() == 2);
    assert(solution.getX()[13][7].size() == 2);
    assert(solution.getX()[13][8].size() == 2);
    assert(solution.getX()[13][9].size() == 2);
    assert(solution.getX()[13][10].size() == 2);
    assert(solution.getX()[13][11].size() == 2);
    assert(solution.getX()[13][12].size() == 2);
    assert(solution.getX()[13][13].size() == 2);
    assert(solution.getX()[13][14].size() == 2);
    assert(solution.getX()[13][15].size() == 2);
    assert(solution.getX()[13][16].size() == 2);
    assert(solution.getX()[13][17].size() == 2);
    assert(solution.getX()[13][18].size() == 2);
    assert(solution.getX()[13][19].size() == 2);

    assert(solution.getX()[14].size() == 20);
    assert(solution.getX()[14][0].size() == 2);
    assert(solution.getX()[14][1].size() == 2);
    assert(solution.getX()[14][2].size() == 2);
    assert(solution.getX()[14][3].size() == 2);
    assert(solution.getX()[14][4].size() == 2);
    assert(solution.getX()[14][5].size() == 2);
    assert(solution.getX()[14][6].size() == 2);
    assert(solution.getX()[14][7].size() == 2);
    assert(solution.getX()[14][8].size() == 2);
    assert(solution.getX()[14][9].size() == 2);
    assert(solution.getX()[14][10].size() == 2);
    assert(solution.getX()[14][11].size() == 2);
    assert(solution.getX()[14][12].size() == 2);
    assert(solution.getX()[14][13].size() == 2);
    assert(solution.getX()[14][14].size() == 2);
    assert(solution.getX()[14][15].size() == 2);
    assert(solution.getX()[14][16].size() == 2);
    assert(solution.getX()[14][17].size() == 2);
    assert(solution.getX()[14][18].size() == 2);
    assert(solution.getX()[14][19].size() == 2);

    assert(solution.getX()[15].size() == 20);
    assert(solution.getX()[15][0].size() == 2);
    assert(solution.getX()[15][1].size() == 2);
    assert(solution.getX()[15][2].size() == 2);
    assert(solution.getX()[15][3].size() == 2);
    assert(solution.getX()[15][4].size() == 2);
    assert(solution.getX()[15][5].size() == 2);
    assert(solution.getX()[15][6].size() == 2);
    assert(solution.getX()[15][7].size() == 2);
    assert(solution.getX()[15][8].size() == 2);
    assert(solution.getX()[15][9].size() == 2);
    assert(solution.getX()[15][10].size() == 2);
    assert(solution.getX()[15][11].size() == 2);
    assert(solution.getX()[15][12].size() == 2);
    assert(solution.getX()[15][13].size() == 2);
    assert(solution.getX()[15][14].size() == 2);
    assert(solution.getX()[15][15].size() == 2);
    assert(solution.getX()[15][16].size() == 2);
    assert(solution.getX()[15][17].size() == 2);
    assert(solution.getX()[15][18].size() == 2);
    assert(solution.getX()[15][19].size() == 2);

    assert(solution.getX()[16].size() == 20);
    assert(solution.getX()[16][0].size() == 2);
    assert(solution.getX()[16][1].size() == 2);
    assert(solution.getX()[16][2].size() == 2);
    assert(solution.getX()[16][3].size() == 2);
    assert(solution.getX()[16][4].size() == 2);
    assert(solution.getX()[16][5].size() == 2);
    assert(solution.getX()[16][6].size() == 2);
    assert(solution.getX()[16][7].size() == 2);
    assert(solution.getX()[16][8].size() == 2);
    assert(solution.getX()[16][9].size() == 2);
    assert(solution.getX()[16][10].size() == 2);
    assert(solution.getX()[16][11].size() == 2);
    assert(solution.getX()[16][12].size() == 2);
    assert(solution.getX()[16][13].size() == 2);
    assert(solution.getX()[16][14].size() == 2);
    assert(solution.getX()[16][15].size() == 2);
    assert(solution.getX()[16][16].size() == 2);
    assert(solution.getX()[16][17].size() == 2);
    assert(solution.getX()[16][18].size() == 2);
    assert(solution.getX()[16][19].size() == 2);

    assert(solution.getX()[17].size() == 20);
    assert(solution.getX()[17][0].size() == 2);
    assert(solution.getX()[17][1].size() == 2);
    assert(solution.getX()[17][2].size() == 2);
    assert(solution.getX()[17][3].size() == 2);
    assert(solution.getX()[17][4].size() == 2);
    assert(solution.getX()[17][5].size() == 2);
    assert(solution.getX()[17][6].size() == 2);
    assert(solution.getX()[17][7].size() == 2);
    assert(solution.getX()[17][8].size() == 2);
    assert(solution.getX()[17][9].size() == 2);
    assert(solution.getX()[17][10].size() == 2);
    assert(solution.getX()[17][11].size() == 2);
    assert(solution.getX()[17][12].size() == 2);
    assert(solution.getX()[17][13].size() == 2);
    assert(solution.getX()[17][14].size() == 2);
    assert(solution.getX()[17][15].size() == 2);
    assert(solution.getX()[17][16].size() == 2);
    assert(solution.getX()[17][17].size() == 2);
    assert(solution.getX()[17][18].size() == 2);
    assert(solution.getX()[17][19].size() == 2);

    assert(solution.getX()[18].size() == 20);
    assert(solution.getX()[18][0].size() == 2);
    assert(solution.getX()[18][1].size() == 2);
    assert(solution.getX()[18][2].size() == 2);
    assert(solution.getX()[18][3].size() == 2);
    assert(solution.getX()[18][4].size() == 2);
    assert(solution.getX()[18][5].size() == 2);
    assert(solution.getX()[18][6].size() == 2);
    assert(solution.getX()[18][7].size() == 2);
    assert(solution.getX()[18][8].size() == 2);
    assert(solution.getX()[18][9].size() == 2);
    assert(solution.getX()[18][10].size() == 2);
    assert(solution.getX()[18][11].size() == 2);
    assert(solution.getX()[18][12].size() == 2);
    assert(solution.getX()[18][13].size() == 2);
    assert(solution.getX()[18][14].size() == 2);
    assert(solution.getX()[18][15].size() == 2);
    assert(solution.getX()[18][16].size() == 2);
    assert(solution.getX()[18][17].size() == 2);
    assert(solution.getX()[18][18].size() == 2);
    assert(solution.getX()[18][19].size() == 2);

    assert(solution.getX()[19].size() == 20);
    assert(solution.getX()[19][0].size() == 2);
    assert(solution.getX()[19][1].size() == 2);
    assert(solution.getX()[19][2].size() == 2);
    assert(solution.getX()[19][3].size() == 2);
    assert(solution.getX()[19][4].size() == 2);
    assert(solution.getX()[19][5].size() == 2);
    assert(solution.getX()[19][6].size() == 2);
    assert(solution.getX()[19][7].size() == 2);
    assert(solution.getX()[19][8].size() == 2);
    assert(solution.getX()[19][9].size() == 2);
    assert(solution.getX()[19][10].size() == 2);
    assert(solution.getX()[19][11].size() == 2);
    assert(solution.getX()[19][12].size() == 2);
    assert(solution.getX()[19][13].size() == 2);
    assert(solution.getX()[19][14].size() == 2);
    assert(solution.getX()[19][15].size() == 2);
    assert(solution.getX()[19][16].size() == 2);
    assert(solution.getX()[19][17].size() == 2);
    assert(solution.getX()[19][18].size() == 2);
    assert(solution.getX()[19][19].size() == 2);

    assert(!solution.getX(0, 0, 0));
    assert(!solution.getX(0, 1, 0));
    assert(!solution.getX(0, 2, 0));
    assert(!solution.getX(0, 3, 0));
    assert(!solution.getX(0, 4, 0));
    assert(!solution.getX(0, 5, 0));
    assert(!solution.getX(0, 6, 0));
    assert(!solution.getX(0, 7, 0));
    assert(!solution.getX(0, 8, 0));
    assert(!solution.getX(0, 9, 0));
    assert(solution.getX(0, 10, 0));
    assert(!solution.getX(0, 11, 0));
    assert(!solution.getX(0, 12, 0));
    assert(!solution.getX(0, 13, 0));
    assert(!solution.getX(0, 14, 0));
    assert(!solution.getX(0, 15, 0));
    assert(!solution.getX(0, 16, 0));
    assert(!solution.getX(0, 17, 0));
    assert(!solution.getX(0, 18, 0));
    assert(!solution.getX(0, 19, 0));

    assert(!solution.getX(1, 0, 0));
    assert(!solution.getX(1, 1, 0));
    assert(!solution.getX(1, 2, 0));
    assert(!solution.getX(1, 3, 0));
    assert(!solution.getX(1, 4, 0));
    assert(!solution.getX(1, 5, 0));
    assert(!solution.getX(1, 6, 0));
    assert(!solution.getX(1, 7, 0));
    assert(!solution.getX(1, 8, 0));
    assert(!solution.getX(1, 9, 0));
    assert(!solution.getX(1, 10, 0));
    assert(!solution.getX(1, 11, 0));
    assert(!solution.getX(1, 12, 0));
    assert(!solution.getX(1, 13, 0));
    assert(!solution.getX(1, 14, 0));
    assert(!solution.getX(1, 15, 0));
    assert(!solution.getX(1, 16, 0));
    assert(!solution.getX(1, 17, 0));
    assert(!solution.getX(1, 18, 0));
    assert(!solution.getX(1, 19, 0));

    assert(!solution.getX(2, 0, 0));
    assert(!solution.getX(2, 1, 0));
    assert(!solution.getX(2, 2, 0));
    assert(!solution.getX(2, 3, 0));
    assert(!solution.getX(2, 4, 0));
    assert(!solution.getX(2, 5, 0));
    assert(!solution.getX(2, 6, 0));
    assert(!solution.getX(2, 7, 0));
    assert(!solution.getX(2, 8, 0));
    assert(!solution.getX(2, 9, 0));
    assert(!solution.getX(2, 10, 0));
    assert(!solution.getX(2, 11, 0));
    assert(!solution.getX(2, 12, 0));
    assert(!solution.getX(2, 13, 0));
    assert(!solution.getX(2, 14, 0));
    assert(!solution.getX(2, 15, 0));
    assert(!solution.getX(2, 16, 0));
    assert(!solution.getX(2, 17, 0));
    assert(!solution.getX(2, 18, 0));
    assert(!solution.getX(2, 19, 0));

    assert(!solution.getX(3, 0, 0));
    assert(!solution.getX(3, 1, 0));
    assert(!solution.getX(3, 2, 0));
    assert(!solution.getX(3, 3, 0));
    assert(!solution.getX(3, 4, 0));
    assert(!solution.getX(3, 5, 0));
    assert(!solution.getX(3, 6, 0));
    assert(!solution.getX(3, 7, 0));
    assert(!solution.getX(3, 8, 0));
    assert(!solution.getX(3, 9, 0));
    assert(!solution.getX(3, 10, 0));
    assert(!solution.getX(3, 11, 0));
    assert(!solution.getX(3, 12, 0));
    assert(!solution.getX(3, 13, 0));
    assert(!solution.getX(3, 14, 0));
    assert(!solution.getX(3, 15, 0));
    assert(!solution.getX(3, 16, 0));
    assert(!solution.getX(3, 17, 0));
    assert(!solution.getX(3, 18, 0));
    assert(!solution.getX(3, 19, 0));

    assert(!solution.getX(4, 0, 0));
    assert(!solution.getX(4, 1, 0));
    assert(!solution.getX(4, 2, 0));
    assert(!solution.getX(4, 3, 0));
    assert(!solution.getX(4, 4, 0));
    assert(!solution.getX(4, 5, 0));
    assert(solution.getX(4, 6, 0));
    assert(!solution.getX(4, 7, 0));
    assert(!solution.getX(4, 8, 0));
    assert(!solution.getX(4, 9, 0));
    assert(!solution.getX(4, 10, 0));
    assert(!solution.getX(4, 11, 0));
    assert(!solution.getX(4, 12, 0));
    assert(!solution.getX(4, 13, 0));
    assert(!solution.getX(4, 14, 0));
    assert(!solution.getX(4, 15, 0));
    assert(!solution.getX(4, 16, 0));
    assert(!solution.getX(4, 17, 0));
    assert(!solution.getX(4, 18, 0));
    assert(!solution.getX(4, 19, 0));

    assert(!solution.getX(5, 0, 0));
    assert(!solution.getX(5, 1, 0));
    assert(!solution.getX(5, 2, 0));
    assert(!solution.getX(5, 3, 0));
    assert(!solution.getX(5, 4, 0));
    assert(!solution.getX(5, 5, 0));
    assert(!solution.getX(5, 6, 0));
    assert(!solution.getX(5, 7, 0));
    assert(!solution.getX(5, 8, 0));
    assert(!solution.getX(5, 9, 0));
    assert(!solution.getX(5, 10, 0));
    assert(!solution.getX(5, 11, 0));
    assert(!solution.getX(5, 12, 0));
    assert(solution.getX(5, 13, 0));
    assert(!solution.getX(5, 14, 0));
    assert(!solution.getX(5, 15, 0));
    assert(!solution.getX(5, 16, 0));
    assert(!solution.getX(5, 17, 0));
    assert(!solution.getX(5, 18, 0));
    assert(!solution.getX(5, 19, 0));

    assert(!solution.getX(6, 0, 0));
    assert(!solution.getX(6, 1, 0));
    assert(!solution.getX(6, 2, 0));
    assert(!solution.getX(6, 3, 0));
    assert(!solution.getX(6, 4, 0));
    assert(!solution.getX(6, 5, 0));
    assert(!solution.getX(6, 6, 0));
    assert(solution.getX(6, 7, 0));
    assert(!solution.getX(6, 8, 0));
    assert(!solution.getX(6, 9, 0));
    assert(!solution.getX(6, 10, 0));
    assert(!solution.getX(6, 11, 0));
    assert(!solution.getX(6, 12, 0));
    assert(!solution.getX(6, 13, 0));
    assert(!solution.getX(6, 14, 0));
    assert(!solution.getX(6, 15, 0));
    assert(!solution.getX(6, 16, 0));
    assert(!solution.getX(6, 17, 0));
    assert(!solution.getX(6, 18, 0));
    assert(!solution.getX(6, 19, 0));

    assert(!solution.getX(7, 0, 0));
    assert(!solution.getX(7, 1, 0));
    assert(!solution.getX(7, 2, 0));
    assert(!solution.getX(7, 3, 0));
    assert(!solution.getX(7, 4, 0));
    assert(solution.getX(7, 5, 0));
    assert(!solution.getX(7, 6, 0));
    assert(!solution.getX(7, 7, 0));
    assert(!solution.getX(7, 8, 0));
    assert(!solution.getX(7, 9, 0));
    assert(!solution.getX(7, 10, 0));
    assert(!solution.getX(7, 11, 0));
    assert(!solution.getX(7, 12, 0));
    assert(!solution.getX(7, 13, 0));
    assert(!solution.getX(7, 14, 0));
    assert(!solution.getX(7, 15, 0));
    assert(!solution.getX(7, 16, 0));
    assert(!solution.getX(7, 17, 0));
    assert(!solution.getX(7, 18, 0));
    assert(!solution.getX(7, 19, 0));

    assert(!solution.getX(8, 0, 0));
    assert(!solution.getX(8, 1, 0));
    assert(!solution.getX(8, 2, 0));
    assert(!solution.getX(8, 3, 0));
    assert(!solution.getX(8, 4, 0));
    assert(!solution.getX(8, 5, 0));
    assert(!solution.getX(8, 6, 0));
    assert(!solution.getX(8, 7, 0));
    assert(!solution.getX(8, 8, 0));
    assert(!solution.getX(8, 9, 0));
    assert(!solution.getX(8, 10, 0));
    assert(!solution.getX(8, 11, 0));
    assert(!solution.getX(8, 12, 0));
    assert(!solution.getX(8, 13, 0));
    assert(!solution.getX(8, 14, 0));
    assert(!solution.getX(8, 15, 0));
    assert(!solution.getX(8, 16, 0));
    assert(!solution.getX(8, 17, 0));
    assert(!solution.getX(8, 18, 0));
    assert(!solution.getX(8, 19, 0));

    assert(!solution.getX(9, 0, 0));
    assert(!solution.getX(9, 1, 0));
    assert(!solution.getX(9, 2, 0));
    assert(!solution.getX(9, 3, 0));
    assert(!solution.getX(9, 4, 0));
    assert(!solution.getX(9, 5, 0));
    assert(!solution.getX(9, 6, 0));
    assert(!solution.getX(9, 7, 0));
    assert(!solution.getX(9, 8, 0));
    assert(!solution.getX(9, 9, 0));
    assert(!solution.getX(9, 10, 0));
    assert(!solution.getX(9, 11, 0));
    assert(!solution.getX(9, 12, 0));
    assert(!solution.getX(9, 13, 0));
    assert(!solution.getX(9, 14, 0));
    assert(!solution.getX(9, 15, 0));
    assert(!solution.getX(9, 16, 0));
    assert(!solution.getX(9, 17, 0));
    assert(!solution.getX(9, 18, 0));
    assert(!solution.getX(9, 19, 0));

    assert(!solution.getX(10, 0, 0));
    assert(!solution.getX(10, 1, 0));
    assert(!solution.getX(10, 2, 0));
    assert(!solution.getX(10, 3, 0));
    assert(!solution.getX(10, 4, 0));
    assert(!solution.getX(10, 5, 0));
    assert(!solution.getX(10, 6, 0));
    assert(!solution.getX(10, 7, 0));
    assert(!solution.getX(10, 8, 0));
    assert(!solution.getX(10, 9, 0));
    assert(!solution.getX(10, 10, 0));
    assert(solution.getX(10, 11, 0));
    assert(!solution.getX(10, 12, 0));
    assert(!solution.getX(10, 13, 0));
    assert(!solution.getX(10, 14, 0));
    assert(!solution.getX(10, 15, 0));
    assert(!solution.getX(10, 16, 0));
    assert(!solution.getX(10, 17, 0));
    assert(!solution.getX(10, 18, 0));
    assert(!solution.getX(10, 19, 0));

    assert(!solution.getX(11, 0, 0));
    assert(!solution.getX(11, 1, 0));
    assert(!solution.getX(11, 2, 0));
    assert(!solution.getX(11, 3, 0));
    assert(!solution.getX(11, 4, 0));
    assert(!solution.getX(11, 5, 0));
    assert(!solution.getX(11, 6, 0));
    assert(!solution.getX(11, 7, 0));
    assert(!solution.getX(11, 8, 0));
    assert(!solution.getX(11, 9, 0));
    assert(!solution.getX(11, 10, 0));
    assert(!solution.getX(11, 11, 0));
    assert(solution.getX(11, 12, 0));
    assert(!solution.getX(11, 13, 0));
    assert(!solution.getX(11, 14, 0));
    assert(!solution.getX(11, 15, 0));
    assert(!solution.getX(11, 16, 0));
    assert(!solution.getX(11, 17, 0));
    assert(!solution.getX(11, 18, 0));
    assert(!solution.getX(11, 19, 0));

    assert(!solution.getX(12, 0, 0));
    assert(!solution.getX(12, 1, 0));
    assert(!solution.getX(12, 2, 0));
    assert(!solution.getX(12, 3, 0));
    assert(solution.getX(12, 4, 0));
    assert(!solution.getX(12, 5, 0));
    assert(!solution.getX(12, 6, 0));
    assert(!solution.getX(12, 7, 0));
    assert(!solution.getX(12, 8, 0));
    assert(!solution.getX(12, 9, 0));
    assert(!solution.getX(12, 10, 0));
    assert(!solution.getX(12, 11, 0));
    assert(!solution.getX(12, 12, 0));
    assert(!solution.getX(12, 13, 0));
    assert(!solution.getX(12, 14, 0));
    assert(!solution.getX(12, 15, 0));
    assert(!solution.getX(12, 16, 0));
    assert(!solution.getX(12, 17, 0));
    assert(!solution.getX(12, 18, 0));
    assert(!solution.getX(12, 19, 0));

    assert(!solution.getX(13, 0, 0));
    assert(solution.getX(13, 1, 0));
    assert(!solution.getX(13, 2, 0));
    assert(!solution.getX(13, 3, 0));
    assert(!solution.getX(13, 4, 0));
    assert(!solution.getX(13, 5, 0));
    assert(!solution.getX(13, 6, 0));
    assert(!solution.getX(13, 7, 0));
    assert(!solution.getX(13, 8, 0));
    assert(!solution.getX(13, 9, 0));
    assert(!solution.getX(13, 10, 0));
    assert(!solution.getX(13, 11, 0));
    assert(!solution.getX(13, 12, 0));
    assert(!solution.getX(13, 13, 0));
    assert(!solution.getX(13, 14, 0));
    assert(!solution.getX(13, 15, 0));
    assert(!solution.getX(13, 16, 0));
    assert(!solution.getX(13, 17, 0));
    assert(!solution.getX(13, 18, 0));
    assert(!solution.getX(13, 19, 0));

    assert(!solution.getX(14, 0, 0));
    assert(!solution.getX(14, 1, 0));
    assert(!solution.getX(14, 2, 0));
    assert(!solution.getX(14, 3, 0));
    assert(!solution.getX(14, 4, 0));
    assert(!solution.getX(14, 5, 0));
    assert(!solution.getX(14, 6, 0));
    assert(!solution.getX(14, 7, 0));
    assert(!solution.getX(14, 8, 0));
    assert(!solution.getX(14, 9, 0));
    assert(!solution.getX(14, 10, 0));
    assert(!solution.getX(14, 11, 0));
    assert(!solution.getX(14, 12, 0));
    assert(!solution.getX(14, 13, 0));
    assert(!solution.getX(14, 14, 0));
    assert(!solution.getX(14, 15, 0));
    assert(!solution.getX(14, 16, 0));
    assert(!solution.getX(14, 17, 0));
    assert(!solution.getX(14, 18, 0));
    assert(!solution.getX(14, 19, 0));

    assert(!solution.getX(15, 0, 0));
    assert(!solution.getX(15, 1, 0));
    assert(!solution.getX(15, 2, 0));
    assert(!solution.getX(15, 3, 0));
    assert(!solution.getX(15, 4, 0));
    assert(!solution.getX(15, 5, 0));
    assert(!solution.getX(15, 6, 0));
    assert(!solution.getX(15, 7, 0));
    assert(!solution.getX(15, 8, 0));
    assert(!solution.getX(15, 9, 0));
    assert(!solution.getX(15, 10, 0));
    assert(!solution.getX(15, 11, 0));
    assert(!solution.getX(15, 12, 0));
    assert(!solution.getX(15, 13, 0));
    assert(!solution.getX(15, 14, 0));
    assert(!solution.getX(15, 15, 0));
    assert(!solution.getX(15, 16, 0));
    assert(!solution.getX(15, 17, 0));
    assert(!solution.getX(15, 18, 0));
    assert(!solution.getX(15, 19, 0));

    assert(!solution.getX(16, 0, 0));
    assert(!solution.getX(16, 1, 0));
    assert(!solution.getX(16, 2, 0));
    assert(!solution.getX(16, 3, 0));
    assert(!solution.getX(16, 4, 0));
    assert(!solution.getX(16, 5, 0));
    assert(!solution.getX(16, 6, 0));
    assert(!solution.getX(16, 7, 0));
    assert(!solution.getX(16, 8, 0));
    assert(!solution.getX(16, 9, 0));
    assert(!solution.getX(16, 10, 0));
    assert(!solution.getX(16, 11, 0));
    assert(!solution.getX(16, 12, 0));
    assert(!solution.getX(16, 13, 0));
    assert(!solution.getX(16, 14, 0));
    assert(!solution.getX(16, 15, 0));
    assert(!solution.getX(16, 16, 0));
    assert(!solution.getX(16, 17, 0));
    assert(!solution.getX(16, 18, 0));
    assert(!solution.getX(16, 19, 0));

    assert(!solution.getX(17, 0, 0));
    assert(!solution.getX(17, 1, 0));
    assert(!solution.getX(17, 2, 0));
    assert(!solution.getX(17, 3, 0));
    assert(!solution.getX(17, 4, 0));
    assert(!solution.getX(17, 5, 0));
    assert(!solution.getX(17, 6, 0));
    assert(!solution.getX(17, 7, 0));
    assert(!solution.getX(17, 8, 0));
    assert(!solution.getX(17, 9, 0));
    assert(!solution.getX(17, 10, 0));
    assert(!solution.getX(17, 11, 0));
    assert(!solution.getX(17, 12, 0));
    assert(!solution.getX(17, 13, 0));
    assert(!solution.getX(17, 14, 0));
    assert(!solution.getX(17, 15, 0));
    assert(!solution.getX(17, 16, 0));
    assert(!solution.getX(17, 17, 0));
    assert(!solution.getX(17, 18, 0));
    assert(!solution.getX(17, 19, 0));

    assert(!solution.getX(18, 0, 0));
    assert(!solution.getX(18, 1, 0));
    assert(!solution.getX(18, 2, 0));
    assert(!solution.getX(18, 3, 0));
    assert(!solution.getX(18, 4, 0));
    assert(!solution.getX(18, 5, 0));
    assert(!solution.getX(18, 6, 0));
    assert(!solution.getX(18, 7, 0));
    assert(!solution.getX(18, 8, 0));
    assert(!solution.getX(18, 9, 0));
    assert(!solution.getX(18, 10, 0));
    assert(!solution.getX(18, 11, 0));
    assert(!solution.getX(18, 12, 0));
    assert(!solution.getX(18, 13, 0));
    assert(!solution.getX(18, 14, 0));
    assert(!solution.getX(18, 15, 0));
    assert(!solution.getX(18, 16, 0));
    assert(!solution.getX(18, 17, 0));
    assert(!solution.getX(18, 18, 0));
    assert(!solution.getX(18, 19, 0));

    assert(!solution.getX(19, 0, 0));
    assert(!solution.getX(19, 1, 0));
    assert(!solution.getX(19, 2, 0));
    assert(!solution.getX(19, 3, 0));
    assert(!solution.getX(19, 4, 0));
    assert(!solution.getX(19, 5, 0));
    assert(!solution.getX(19, 6, 0));
    assert(!solution.getX(19, 7, 0));
    assert(!solution.getX(19, 8, 0));
    assert(!solution.getX(19, 9, 0));
    assert(!solution.getX(19, 10, 0));
    assert(!solution.getX(19, 11, 0));
    assert(!solution.getX(19, 12, 0));
    assert(!solution.getX(19, 13, 0));
    assert(!solution.getX(19, 14, 0));
    assert(!solution.getX(19, 15, 0));
    assert(!solution.getX(19, 16, 0));
    assert(!solution.getX(19, 17, 0));
    assert(!solution.getX(19, 18, 0));
    assert(!solution.getX(19, 19, 0));

    assert(!solution.getX(0, 0, 1));
    assert(!solution.getX(0, 1, 1));
    assert(!solution.getX(0, 2, 1));
    assert(!solution.getX(0, 3, 1));
    assert(!solution.getX(0, 4, 1));
    assert(!solution.getX(0, 5, 1));
    assert(!solution.getX(0, 6, 1));
    assert(!solution.getX(0, 7, 1));
    assert(!solution.getX(0, 8, 1));
    assert(!solution.getX(0, 9, 1));
    assert(!solution.getX(0, 10, 1));
    assert(!solution.getX(0, 11, 1));
    assert(!solution.getX(0, 12, 1));
    assert(!solution.getX(0, 13, 1));
    assert(!solution.getX(0, 14, 1));
    assert(!solution.getX(0, 15, 1));
    assert(!solution.getX(0, 16, 1));
    assert(!solution.getX(0, 17, 1));
    assert(!solution.getX(0, 18, 1));
    assert(!solution.getX(0, 19, 1));

    assert(!solution.getX(1, 0, 1));
    assert(!solution.getX(1, 1, 1));
    assert(!solution.getX(1, 2, 1));
    assert(!solution.getX(1, 3, 1));
    assert(!solution.getX(1, 4, 1));
    assert(!solution.getX(1, 5, 1));
    assert(!solution.getX(1, 6, 1));
    assert(!solution.getX(1, 7, 1));
    assert(!solution.getX(1, 8, 1));
    assert(!solution.getX(1, 9, 1));
    assert(!solution.getX(1, 10, 1));
    assert(!solution.getX(1, 11, 1));
    assert(!solution.getX(1, 12, 1));
    assert(!solution.getX(1, 13, 1));
    assert(!solution.getX(1, 14, 1));
    assert(!solution.getX(1, 15, 1));
    assert(!solution.getX(1, 16, 1));
    assert(!solution.getX(1, 17, 1));
    assert(!solution.getX(1, 18, 1));
    assert(!solution.getX(1, 19, 1));

    assert(!solution.getX(2, 0, 1));
    assert(!solution.getX(2, 1, 1));
    assert(!solution.getX(2, 2, 1));
    assert(!solution.getX(2, 3, 1));
    assert(!solution.getX(2, 4, 1));
    assert(!solution.getX(2, 5, 1));
    assert(!solution.getX(2, 6, 1));
    assert(!solution.getX(2, 7, 1));
    assert(!solution.getX(2, 8, 1));
    assert(!solution.getX(2, 9, 1));
    assert(!solution.getX(2, 10, 1));
    assert(!solution.getX(2, 11, 1));
    assert(!solution.getX(2, 12, 1));
    assert(!solution.getX(2, 13, 1));
    assert(!solution.getX(2, 14, 1));
    assert(!solution.getX(2, 15, 1));
    assert(solution.getX(2, 16, 1));
    assert(!solution.getX(2, 17, 1));
    assert(!solution.getX(2, 18, 1));
    assert(!solution.getX(2, 19, 1));

    assert(!solution.getX(3, 0, 1));
    assert(!solution.getX(3, 1, 1));
    assert(!solution.getX(3, 2, 1));
    assert(!solution.getX(3, 3, 1));
    assert(!solution.getX(3, 4, 1));
    assert(!solution.getX(3, 5, 1));
    assert(!solution.getX(3, 6, 1));
    assert(!solution.getX(3, 7, 1));
    assert(!solution.getX(3, 8, 1));
    assert(!solution.getX(3, 9, 1));
    assert(!solution.getX(3, 10, 1));
    assert(!solution.getX(3, 11, 1));
    assert(!solution.getX(3, 12, 1));
    assert(!solution.getX(3, 13, 1));
    assert(!solution.getX(3, 14, 1));
    assert(!solution.getX(3, 15, 1));
    assert(!solution.getX(3, 16, 1));
    assert(!solution.getX(3, 17, 1));
    assert(!solution.getX(3, 18, 1));
    assert(!solution.getX(3, 19, 1));

    assert(!solution.getX(4, 0, 1));
    assert(!solution.getX(4, 1, 1));
    assert(!solution.getX(4, 2, 1));
    assert(!solution.getX(4, 3, 1));
    assert(!solution.getX(4, 4, 1));
    assert(!solution.getX(4, 5, 1));
    assert(!solution.getX(4, 6, 1));
    assert(!solution.getX(4, 7, 1));
    assert(!solution.getX(4, 8, 1));
    assert(!solution.getX(4, 9, 1));
    assert(!solution.getX(4, 10, 1));
    assert(!solution.getX(4, 11, 1));
    assert(!solution.getX(4, 12, 1));
    assert(!solution.getX(4, 13, 1));
    assert(!solution.getX(4, 14, 1));
    assert(!solution.getX(4, 15, 1));
    assert(!solution.getX(4, 16, 1));
    assert(!solution.getX(4, 17, 1));
    assert(!solution.getX(4, 18, 1));
    assert(!solution.getX(4, 19, 1));

    assert(!solution.getX(5, 0, 1));
    assert(!solution.getX(5, 1, 1));
    assert(!solution.getX(5, 2, 1));
    assert(!solution.getX(5, 3, 1));
    assert(!solution.getX(5, 4, 1));
    assert(!solution.getX(5, 5, 1));
    assert(!solution.getX(5, 6, 1));
    assert(!solution.getX(5, 7, 1));
    assert(!solution.getX(5, 8, 1));
    assert(!solution.getX(5, 9, 1));
    assert(!solution.getX(5, 10, 1));
    assert(!solution.getX(5, 11, 1));
    assert(!solution.getX(5, 12, 1));
    assert(!solution.getX(5, 13, 1));
    assert(!solution.getX(5, 14, 1));
    assert(!solution.getX(5, 15, 1));
    assert(!solution.getX(5, 16, 1));
    assert(!solution.getX(5, 17, 1));
    assert(!solution.getX(5, 18, 1));
    assert(!solution.getX(5, 19, 1));

    assert(!solution.getX(6, 0, 1));
    assert(!solution.getX(6, 1, 1));
    assert(!solution.getX(6, 2, 1));
    assert(!solution.getX(6, 3, 1));
    assert(!solution.getX(6, 4, 1));
    assert(!solution.getX(6, 5, 1));
    assert(!solution.getX(6, 6, 1));
    assert(!solution.getX(6, 7, 1));
    assert(!solution.getX(6, 8, 1));
    assert(!solution.getX(6, 9, 1));
    assert(!solution.getX(6, 10, 1));
    assert(!solution.getX(6, 11, 1));
    assert(!solution.getX(6, 12, 1));
    assert(!solution.getX(6, 13, 1));
    assert(!solution.getX(6, 14, 1));
    assert(!solution.getX(6, 15, 1));
    assert(!solution.getX(6, 16, 1));
    assert(!solution.getX(6, 17, 1));
    assert(!solution.getX(6, 18, 1));
    assert(!solution.getX(6, 19, 1));

    assert(!solution.getX(7, 0, 1));
    assert(!solution.getX(7, 1, 1));
    assert(!solution.getX(7, 2, 1));
    assert(!solution.getX(7, 3, 1));
    assert(!solution.getX(7, 4, 1));
    assert(!solution.getX(7, 5, 1));
    assert(!solution.getX(7, 6, 1));
    assert(!solution.getX(7, 7, 1));
    assert(!solution.getX(7, 8, 1));
    assert(!solution.getX(7, 9, 1));
    assert(!solution.getX(7, 10, 1));
    assert(!solution.getX(7, 11, 1));
    assert(!solution.getX(7, 12, 1));
    assert(!solution.getX(7, 13, 1));
    assert(!solution.getX(7, 14, 1));
    assert(!solution.getX(7, 15, 1));
    assert(!solution.getX(7, 16, 1));
    assert(!solution.getX(7, 17, 1));
    assert(!solution.getX(7, 18, 1));
    assert(!solution.getX(7, 19, 1));

    assert(!solution.getX(8, 0, 1));
    assert(!solution.getX(8, 1, 1));
    assert(!solution.getX(8, 2, 1));
    assert(!solution.getX(8, 3, 1));
    assert(!solution.getX(8, 4, 1));
    assert(!solution.getX(8, 5, 1));
    assert(!solution.getX(8, 6, 1));
    assert(!solution.getX(8, 7, 1));
    assert(!solution.getX(8, 8, 1));
    assert(!solution.getX(8, 9, 1));
    assert(!solution.getX(8, 10, 1));
    assert(!solution.getX(8, 11, 1));
    assert(!solution.getX(8, 12, 1));
    assert(!solution.getX(8, 13, 1));
    assert(!solution.getX(8, 14, 1));
    assert(!solution.getX(8, 15, 1));
    assert(!solution.getX(8, 16, 1));
    assert(!solution.getX(8, 17, 1));
    assert(!solution.getX(8, 18, 1));
    assert(!solution.getX(8, 19, 1));

    assert(!solution.getX(9, 0, 1));
    assert(!solution.getX(9, 1, 1));
    assert(!solution.getX(9, 2, 1));
    assert(!solution.getX(9, 3, 1));
    assert(!solution.getX(9, 4, 1));
    assert(!solution.getX(9, 5, 1));
    assert(!solution.getX(9, 6, 1));
    assert(!solution.getX(9, 7, 1));
    assert(!solution.getX(9, 8, 1));
    assert(!solution.getX(9, 9, 1));
    assert(!solution.getX(9, 10, 1));
    assert(!solution.getX(9, 11, 1));
    assert(!solution.getX(9, 12, 1));
    assert(!solution.getX(9, 13, 1));
    assert(!solution.getX(9, 14, 1));
    assert(!solution.getX(9, 15, 1));
    assert(!solution.getX(9, 16, 1));
    assert(!solution.getX(9, 17, 1));
    assert(!solution.getX(9, 18, 1));
    assert(!solution.getX(9, 19, 1));

    assert(!solution.getX(10, 0, 1));
    assert(!solution.getX(10, 1, 1));
    assert(!solution.getX(10, 2, 1));
    assert(!solution.getX(10, 3, 1));
    assert(!solution.getX(10, 4, 1));
    assert(!solution.getX(10, 5, 1));
    assert(!solution.getX(10, 6, 1));
    assert(!solution.getX(10, 7, 1));
    assert(!solution.getX(10, 8, 1));
    assert(!solution.getX(10, 9, 1));
    assert(!solution.getX(10, 10, 1));
    assert(!solution.getX(10, 11, 1));
    assert(!solution.getX(10, 12, 1));
    assert(!solution.getX(10, 13, 1));
    assert(!solution.getX(10, 14, 1));
    assert(!solution.getX(10, 15, 1));
    assert(!solution.getX(10, 16, 1));
    assert(!solution.getX(10, 17, 1));
    assert(!solution.getX(10, 18, 1));
    assert(!solution.getX(10, 19, 1));

    assert(!solution.getX(11, 0, 1));
    assert(!solution.getX(11, 1, 1));
    assert(!solution.getX(11, 2, 1));
    assert(!solution.getX(11, 3, 1));
    assert(!solution.getX(11, 4, 1));
    assert(!solution.getX(11, 5, 1));
    assert(!solution.getX(11, 6, 1));
    assert(!solution.getX(11, 7, 1));
    assert(!solution.getX(11, 8, 1));
    assert(!solution.getX(11, 9, 1));
    assert(!solution.getX(11, 10, 1));
    assert(!solution.getX(11, 11, 1));
    assert(!solution.getX(11, 12, 1));
    assert(!solution.getX(11, 13, 1));
    assert(!solution.getX(11, 14, 1));
    assert(!solution.getX(11, 15, 1));
    assert(!solution.getX(11, 16, 1));
    assert(!solution.getX(11, 17, 1));
    assert(!solution.getX(11, 18, 1));
    assert(!solution.getX(11, 19, 1));

    assert(!solution.getX(12, 0, 1));
    assert(!solution.getX(12, 1, 1));
    assert(!solution.getX(12, 2, 1));
    assert(!solution.getX(12, 3, 1));
    assert(!solution.getX(12, 4, 1));
    assert(!solution.getX(12, 5, 1));
    assert(!solution.getX(12, 6, 1));
    assert(!solution.getX(12, 7, 1));
    assert(!solution.getX(12, 8, 1));
    assert(!solution.getX(12, 9, 1));
    assert(!solution.getX(12, 10, 1));
    assert(!solution.getX(12, 11, 1));
    assert(!solution.getX(12, 12, 1));
    assert(!solution.getX(12, 13, 1));
    assert(!solution.getX(12, 14, 1));
    assert(!solution.getX(12, 15, 1));
    assert(!solution.getX(12, 16, 1));
    assert(!solution.getX(12, 17, 1));
    assert(!solution.getX(12, 18, 1));
    assert(!solution.getX(12, 19, 1));

    assert(!solution.getX(13, 0, 1));
    assert(!solution.getX(13, 1, 1));
    assert(!solution.getX(13, 2, 1));
    assert(!solution.getX(13, 3, 1));
    assert(!solution.getX(13, 4, 1));
    assert(!solution.getX(13, 5, 1));
    assert(!solution.getX(13, 6, 1));
    assert(!solution.getX(13, 7, 1));
    assert(!solution.getX(13, 8, 1));
    assert(!solution.getX(13, 9, 1));
    assert(!solution.getX(13, 10, 1));
    assert(!solution.getX(13, 11, 1));
    assert(!solution.getX(13, 12, 1));
    assert(!solution.getX(13, 13, 1));
    assert(!solution.getX(13, 14, 1));
    assert(!solution.getX(13, 15, 1));
    assert(!solution.getX(13, 16, 1));
    assert(!solution.getX(13, 17, 1));
    assert(!solution.getX(13, 18, 1));
    assert(!solution.getX(13, 19, 1));

    assert(!solution.getX(14, 0, 1));
    assert(!solution.getX(14, 1, 1));
    assert(!solution.getX(14, 2, 1));
    assert(!solution.getX(14, 3, 1));
    assert(!solution.getX(14, 4, 1));
    assert(!solution.getX(14, 5, 1));
    assert(!solution.getX(14, 6, 1));
    assert(!solution.getX(14, 7, 1));
    assert(!solution.getX(14, 8, 1));
    assert(!solution.getX(14, 9, 1));
    assert(!solution.getX(14, 10, 1));
    assert(!solution.getX(14, 11, 1));
    assert(!solution.getX(14, 12, 1));
    assert(!solution.getX(14, 13, 1));
    assert(!solution.getX(14, 14, 1));
    assert(solution.getX(14, 15, 1));
    assert(!solution.getX(14, 16, 1));
    assert(!solution.getX(14, 17, 1));
    assert(!solution.getX(14, 18, 1));
    assert(!solution.getX(14, 19, 1));

    assert(!solution.getX(15, 0, 1));
    assert(!solution.getX(15, 1, 1));
    assert(!solution.getX(15, 2, 1));
    assert(!solution.getX(15, 3, 1));
    assert(!solution.getX(15, 4, 1));
    assert(!solution.getX(15, 5, 1));
    assert(!solution.getX(15, 6, 1));
    assert(!solution.getX(15, 7, 1));
    assert(!solution.getX(15, 8, 1));
    assert(!solution.getX(15, 9, 1));
    assert(!solution.getX(15, 10, 1));
    assert(!solution.getX(15, 11, 1));
    assert(!solution.getX(15, 12, 1));
    assert(!solution.getX(15, 13, 1));
    assert(!solution.getX(15, 14, 1));
    assert(!solution.getX(15, 15, 1));
    assert(!solution.getX(15, 16, 1));
    assert(solution.getX(15, 17, 1));
    assert(!solution.getX(15, 18, 1));
    assert(!solution.getX(15, 19, 1));

    assert(!solution.getX(16, 0, 1));
    assert(!solution.getX(16, 1, 1));
    assert(!solution.getX(16, 2, 1));
    assert(!solution.getX(16, 3, 1));
    assert(!solution.getX(16, 4, 1));
    assert(!solution.getX(16, 5, 1));
    assert(!solution.getX(16, 6, 1));
    assert(!solution.getX(16, 7, 1));
    assert(!solution.getX(16, 8, 1));
    assert(!solution.getX(16, 9, 1));
    assert(!solution.getX(16, 10, 1));
    assert(!solution.getX(16, 11, 1));
    assert(!solution.getX(16, 12, 1));
    assert(!solution.getX(16, 13, 1));
    assert(!solution.getX(16, 14, 1));
    assert(!solution.getX(16, 15, 1));
    assert(!solution.getX(16, 16, 1));
    assert(!solution.getX(16, 17, 1));
    assert(solution.getX(16, 18, 1));
    assert(!solution.getX(16, 19, 1));

    assert(!solution.getX(17, 0, 1));
    assert(!solution.getX(17, 1, 1));
    assert(!solution.getX(17, 2, 1));
    assert(solution.getX(17, 3, 1));
    assert(!solution.getX(17, 4, 1));
    assert(!solution.getX(17, 5, 1));
    assert(!solution.getX(17, 6, 1));
    assert(!solution.getX(17, 7, 1));
    assert(!solution.getX(17, 8, 1));
    assert(!solution.getX(17, 9, 1));
    assert(!solution.getX(17, 10, 1));
    assert(!solution.getX(17, 11, 1));
    assert(!solution.getX(17, 12, 1));
    assert(!solution.getX(17, 13, 1));
    assert(!solution.getX(17, 14, 1));
    assert(!solution.getX(17, 15, 1));
    assert(!solution.getX(17, 16, 1));
    assert(!solution.getX(17, 17, 1));
    assert(!solution.getX(17, 18, 1));
    assert(!solution.getX(17, 19, 1));

    assert(!solution.getX(18, 0, 1));
    assert(!solution.getX(18, 1, 1));
    assert(!solution.getX(18, 2, 1));
    assert(!solution.getX(18, 3, 1));
    assert(!solution.getX(18, 4, 1));
    assert(!solution.getX(18, 5, 1));
    assert(!solution.getX(18, 6, 1));
    assert(!solution.getX(18, 7, 1));
    assert(!solution.getX(18, 8, 1));
    assert(!solution.getX(18, 9, 1));
    assert(!solution.getX(18, 10, 1));
    assert(!solution.getX(18, 11, 1));
    assert(!solution.getX(18, 12, 1));
    assert(!solution.getX(18, 13, 1));
    assert(!solution.getX(18, 14, 1));
    assert(!solution.getX(18, 15, 1));
    assert(!solution.getX(18, 16, 1));
    assert(!solution.getX(18, 17, 1));
    assert(!solution.getX(18, 18, 1));
    assert(solution.getX(18, 19, 1));

    assert(!solution.getX(19, 0, 1));
    assert(!solution.getX(19, 1, 1));
    assert(!solution.getX(19, 2, 1));
    assert(!solution.getX(19, 3, 1));
    assert(!solution.getX(19, 4, 1));
    assert(!solution.getX(19, 5, 1));
    assert(!solution.getX(19, 6, 1));
    assert(!solution.getX(19, 7, 1));
    assert(!solution.getX(19, 8, 1));
    assert(!solution.getX(19, 9, 1));
    assert(!solution.getX(19, 10, 1));
    assert(!solution.getX(19, 11, 1));
    assert(!solution.getX(19, 12, 1));
    assert(!solution.getX(19, 13, 1));
    assert(solution.getX(19, 14, 1));
    assert(!solution.getX(19, 15, 1));
    assert(!solution.getX(19, 16, 1));
    assert(!solution.getX(19, 17, 1));
    assert(!solution.getX(19, 18, 1));
    assert(!solution.getX(19, 19, 1));

    assert(solution.getY().size() == instance.getNumRequests());
    assert(solution.getY()[0].size() == instance.getNumVehicles());
    assert(solution.getY()[1].size() == instance.getNumVehicles());
    assert(solution.getY()[2].size() == instance.getNumVehicles());
    assert(solution.getY()[3].size() == instance.getNumVehicles());
    assert(solution.getY()[4].size() == instance.getNumVehicles());
    assert(solution.getY()[5].size() == instance.getNumVehicles());
    assert(solution.getY()[6].size() == instance.getNumVehicles());
    assert(solution.getY()[7].size() == instance.getNumVehicles());

    assert(solution.getY(0, 0));
    assert(solution.getY(1, 0));
    assert(!solution.getY(2, 0));
    assert(solution.getY(3, 0));
    assert(solution.getY(4, 0));
    assert(!solution.getY(5, 0));
    assert(!solution.getY(6, 0));
    assert(!solution.getY(7, 0));

    assert(!solution.getY(0, 1));
    assert(!solution.getY(1, 1));
    assert(!solution.getY(2, 1));
    assert(!solution.getY(3, 1));
    assert(!solution.getY(4, 1));
    assert(solution.getY(5, 1));
    assert(solution.getY(6, 1));
    assert(solution.getY(7, 1));

    assert(solution.getT().size() == instance.getNumVertices());
    assert(solution.getT()[0].size() == instance.getNumVehicles());
    assert(solution.getT()[1].size() == instance.getNumVehicles());
    assert(solution.getT()[2].size() == instance.getNumVehicles());
    assert(solution.getT()[3].size() == instance.getNumVehicles());
    assert(solution.getT()[4].size() == instance.getNumVehicles());
    assert(solution.getT()[5].size() == instance.getNumVehicles());
    assert(solution.getT()[6].size() == instance.getNumVehicles());
    assert(solution.getT()[7].size() == instance.getNumVehicles());
    assert(solution.getT()[8].size() == instance.getNumVehicles());
    assert(solution.getT()[9].size() == instance.getNumVehicles());
    assert(solution.getT()[10].size() == instance.getNumVehicles());
    assert(solution.getT()[11].size() == instance.getNumVehicles());
    assert(solution.getT()[12].size() == instance.getNumVehicles());
    assert(solution.getT()[13].size() == instance.getNumVehicles());
    assert(solution.getT()[14].size() == instance.getNumVehicles());
    assert(solution.getT()[15].size() == instance.getNumVehicles());
    assert(solution.getT()[16].size() == instance.getNumVehicles());
    assert(solution.getT()[17].size() == instance.getNumVehicles());
    assert(solution.getT()[18].size() == instance.getNumVehicles());
    assert(solution.getT()[19].size() == instance.getNumVehicles());

    assert(fabs(solution.getT(0, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(1, 0) - (136.0 + 3.0*sqrt(2.0) + 2.0*sqrt(10.0))/5.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(2, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(3, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(4, 0) - (44.0 + 2.0*sqrt(2.0) + sqrt(10.0))/5.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(5, 0) - (105.0 + 2.0*sqrt(2.0) + 2.0*sqrt(10.0))/5.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(6, 0) - (70.0 + 2.0*sqrt(2.0) + sqrt(10.0))/5.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(7, 0) - (90.0 + 2.0*sqrt(2.0) + sqrt(10.0))/5.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(8, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(9, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(10, 0) - 11.0/5.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(11, 0) - 24.0/5.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(12, 0) - (34.0 + 2.0*sqrt(2.0))/5.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(13, 0) - (125.0 + 3.0*sqrt(2.0) + 2.0*sqrt(10.0))/5.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(14, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(15, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(16, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(17, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(18, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(19, 0) - 0.0) < std::numeric_limits<float>::epsilon());

    assert(fabs(solution.getT(0, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(1, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(2, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(3, 1) - (39.0 + sqrt(2.0) + sqrt(5.0))/2.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(4, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(5, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(6, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(7, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(8, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(9, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(10, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(11, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(12, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(13, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(14, 1) - (27.0 + sqrt(2.0))/2.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(15, 1) - (31.0 + sqrt(2.0) + sqrt(5.0))/2.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(16, 1) - 11.0/2.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(17, 1) - (36.0 + sqrt(2.0) + sqrt(5.0))/2.0) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(18, 1) - 8.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getT(19, 1) - (18.0 + sqrt(2.0))/2.0) <
            std::numeric_limits<float>::epsilon());

    assert(solution.getL().size() == instance.getNumVertices());
    assert(solution.getL()[0].size() == instance.getNumVehicles());
    assert(solution.getL()[1].size() == instance.getNumVehicles());
    assert(solution.getL()[2].size() == instance.getNumVehicles());
    assert(solution.getL()[3].size() == instance.getNumVehicles());
    assert(solution.getL()[4].size() == instance.getNumVehicles());
    assert(solution.getL()[5].size() == instance.getNumVehicles());
    assert(solution.getL()[6].size() == instance.getNumVehicles());
    assert(solution.getL()[7].size() == instance.getNumVehicles());
    assert(solution.getL()[8].size() == instance.getNumVehicles());
    assert(solution.getL()[9].size() == instance.getNumVehicles());
    assert(solution.getL()[10].size() == instance.getNumVehicles());
    assert(solution.getL()[11].size() == instance.getNumVehicles());
    assert(solution.getL()[12].size() == instance.getNumVehicles());
    assert(solution.getL()[13].size() == instance.getNumVehicles());
    assert(solution.getL()[14].size() == instance.getNumVehicles());
    assert(solution.getL()[15].size() == instance.getNumVehicles());
    assert(solution.getL()[16].size() == instance.getNumVehicles());
    assert(solution.getL()[17].size() == instance.getNumVehicles());
    assert(solution.getL()[18].size() == instance.getNumVehicles());
    assert(solution.getL()[19].size() == instance.getNumVehicles());

    assert(fabs(solution.getL(0, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(1, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(2, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(3, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(4, 0) - 10.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(5, 0) - 3.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(6, 0) - 15.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(7, 0) - 10.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(8, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(9, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(10, 0) - 3.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(11, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(12, 0) - 3.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(13, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(14, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(15, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(16, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(17, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(18, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(19, 0) - 0.0) < std::numeric_limits<float>::epsilon());

    assert(fabs(solution.getL(0, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(1, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(2, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(3, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(4, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(5, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(6, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(7, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(8, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(9, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(10, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(11, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(12, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(13, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(14, 1) - 5.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(15, 1) - 2.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(16, 1) - 2.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(17, 1) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(18, 1) - 4.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getL(19, 1) - 2.0) < std::numeric_limits<float>::epsilon());

    assert(solution.getTTravels().size() == 2);
    assert(fabs(solution.getTTravel(0) - (29.0 + (1.0 + 3.0*sqrt(2.0) + 2.0*sqrt(10.0))/5.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTTravel(1) - (24.0 + (1.0 + sqrt(2.0) + sqrt(5.0))/2.0)) <
            std::numeric_limits<float>::epsilon());

    assert(solution.getTFulfills().size() == 8);
    assert(fabs(solution.getTFulfill(0) - (25.0 + 2.0*(sqrt(2.0) + sqrt(10.0))/5.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTFulfill(1) - (21.0 + (2.0*sqrt(2.0) + sqrt(10.0))/5.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTFulfill(2) - (0.0)) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTFulfill(3) - (6.0 + 4.0/5.0)) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTFulfill(4) - (27.0 + (3.0*sqrt(2.0) + 2.0*sqrt(10.0))/5.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTFulfill(5) - (17.0 + (1.0 + sqrt(2.0) + sqrt(5.0))/2.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTFulfill(6) - (19.0 + (sqrt(2.0) + sqrt(5.0))/2.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTFulfill(7) - (10.0 + sqrt(2.0)/2.0)) <
            std::numeric_limits<float>::epsilon());

    assert(fabs(solution.getTotalProfit() - (25.0)) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getSumTFulfill() - (125.0 + 2.0*sqrt(2.0) + sqrt(5.0) + sqrt(10.0) + (1.0 +
                        sqrt(2.0))/2.0 + (4.0 + 2.0*sqrt(2.0))/5.0)) <
            std::numeric_limits<float>::epsilon());

    assert(solution.getLoads().size() == 2);

    assert(solution.getLoads()[0].size() == 10);
    assert(fabs(solution.getLoad(0, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(0, 1) - 3.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(0, 2) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(0, 3) - 3.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(0, 4) - 10.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(0, 5) - 15.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(0, 6) - 10.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(0, 7) - 3.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(0, 8) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(0, 9) - 0.0) < std::numeric_limits<float>::epsilon());

    assert(solution.getLoads()[1].size() == 8);
    assert(fabs(solution.getLoad(1, 0) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(1, 1) - 2.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(1, 2) - 4.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(1, 3) - 2.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(1, 4) - 5.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(1, 5) - 2.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(1, 6) - 0.0) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getLoad(1, 7) - 0.0) < std::numeric_limits<float>::epsilon());

    assert(solution.getTimes().size() == 2);

    assert(solution.getTimes()[0].size() == 10);
    assert(fabs(solution.getTime(0, 0) - (2.0)) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(0, 1) - (4.0 + 1.0/5.0)) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(0, 2) - (6.0 + 4.0/5.0)) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(0, 3) - (8.0 + (4.0 + 2.0*sqrt(2.0))/5.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(0, 4) - (12.0 + (4.0 + 2.0*sqrt(2.0) + sqrt(10.0))/5.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(0, 5) - (17.0 + (2.0*sqrt(2.0) + sqrt(10.0))/5.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(0, 6) - (21.0 + (2.0*sqrt(2.0) + sqrt(10.0))/5.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(0, 7) - (25.0 + 2.0*(sqrt(2.0) + sqrt(10.0))/5.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(0, 8) - (27.0 + (3.0*sqrt(2.0) + 2.0*sqrt(10.0))/5.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(0, 9) - (29.0 + (1.0 + 3.0*sqrt(2.0) + 2.0*sqrt(10.0))/5.0)) <
            std::numeric_limits<float>::epsilon());

    assert(solution.getTimes()[1].size() == 8);
    assert(fabs(solution.getTime(1, 0) - (5.0)) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(1, 1) - (6.0 + 1.0/2.0)) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(1, 2) - (9.0)) < std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(1, 3) - (10.0 + sqrt(2.0)/2.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(1, 4) - (15.0 + (1.0 + sqrt(2.0))/2.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(1, 5) - (17.0 + (1.0 + sqrt(2.0) + sqrt(5.0))/2.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(1, 6) - (19.0 + (sqrt(2.0) + sqrt(5.0))/2.0)) <
            std::numeric_limits<float>::epsilon());
    assert(fabs(solution.getTime(1, 7) - (24.0 + (1.0 + sqrt(2.0) + sqrt(5.0))/2.0)) <
            std::numeric_limits<float>::epsilon());

    assert(solution.getVehiclesR().size() == 8);
    assert(solution.getVehicleR(0) == 0);
    assert(solution.getVehicleR(1) == 0);
    assert(solution.getVehicleR(2) >= 2);
    assert(solution.getVehicleR(3) == 0);
    assert(solution.getVehicleR(4) == 0);
    assert(solution.getVehicleR(5) == 1);
    assert(solution.getVehicleR(6) == 1);
    assert(solution.getVehicleR(7) == 1);

    assert(solution.getVehiclesV().size() == 20);
    assert(solution.getVehicleV(0) == 0);
    assert(solution.getVehicleV(1) == 0);
    assert(solution.getVehicleV(2) == 1);
    assert(solution.getVehicleV(3) == 1);
    assert(solution.getVehicleV(4) == 0);
    assert(solution.getVehicleV(5) == 0);
    assert(solution.getVehicleV(6) == 0);
    assert(solution.getVehicleV(7) == 0);
    assert(solution.getVehicleV(8) >= 2);
    assert(solution.getVehicleV(9) >= 2);
    assert(solution.getVehicleV(10) == 0);
    assert(solution.getVehicleV(11) == 0);
    assert(solution.getVehicleV(12) == 0);
    assert(solution.getVehicleV(13) == 0);
    assert(solution.getVehicleV(14) == 1);
    assert(solution.getVehicleV(15) == 1);
    assert(solution.getVehicleV(16) == 1);
    assert(solution.getVehicleV(17) == 1);
    assert(solution.getVehicleV(18) == 1);
    assert(solution.getVehicleV(19) == 1);

    assert(solution.getVehiclesE().size() == 20);

    assert(solution.getVehiclesE()[0].size() == 20);
    assert(solution.getVehicleE(0, 0) >= 2);
    assert(solution.getVehicleE(0, 1) >= 2);
    assert(solution.getVehicleE(0, 2) >= 2);
    assert(solution.getVehicleE(0, 3) >= 2);
    assert(solution.getVehicleE(0, 4) >= 2);
    assert(solution.getVehicleE(0, 5) >= 2);
    assert(solution.getVehicleE(0, 6) >= 2);
    assert(solution.getVehicleE(0, 7) >= 2);
    assert(solution.getVehicleE(0, 8) >= 2);
    assert(solution.getVehicleE(0, 9) >= 2);
    assert(solution.getVehicleE(0, 10) == 0);
    assert(solution.getVehicleE(0, 11) >= 2);
    assert(solution.getVehicleE(0, 12) >= 2);
    assert(solution.getVehicleE(0, 13) >= 2);
    assert(solution.getVehicleE(0, 14) >= 2);
    assert(solution.getVehicleE(0, 15) >= 2);
    assert(solution.getVehicleE(0, 16) >= 2);
    assert(solution.getVehicleE(0, 17) >= 2);
    assert(solution.getVehicleE(0, 18) >= 2);
    assert(solution.getVehicleE(0, 19) >= 2);

    assert(solution.getVehiclesE()[1].size() == 20);
    assert(solution.getVehicleE(1, 0) >= 2);
    assert(solution.getVehicleE(1, 1) >= 2);
    assert(solution.getVehicleE(1, 2) >= 2);
    assert(solution.getVehicleE(1, 3) >= 2);
    assert(solution.getVehicleE(1, 4) >= 2);
    assert(solution.getVehicleE(1, 5) >= 2);
    assert(solution.getVehicleE(1, 6) >= 2);
    assert(solution.getVehicleE(1, 7) >= 2);
    assert(solution.getVehicleE(1, 8) >= 2);
    assert(solution.getVehicleE(1, 9) >= 2);
    assert(solution.getVehicleE(1, 10) >= 2);
    assert(solution.getVehicleE(1, 11) >= 2);
    assert(solution.getVehicleE(1, 12) >= 2);
    assert(solution.getVehicleE(1, 13) >= 2);
    assert(solution.getVehicleE(1, 14) >= 2);
    assert(solution.getVehicleE(1, 15) >= 2);
    assert(solution.getVehicleE(1, 16) >= 2);
    assert(solution.getVehicleE(1, 17) >= 2);
    assert(solution.getVehicleE(1, 18) >= 2);
    assert(solution.getVehicleE(1, 19) >= 2);

    assert(solution.getVehiclesE()[2].size() == 20);
    assert(solution.getVehicleE(2, 0) >= 2);
    assert(solution.getVehicleE(2, 1) >= 2);
    assert(solution.getVehicleE(2, 2) >= 2);
    assert(solution.getVehicleE(2, 3) >= 2);
    assert(solution.getVehicleE(2, 4) >= 2);
    assert(solution.getVehicleE(2, 5) >= 2);
    assert(solution.getVehicleE(2, 6) >= 2);
    assert(solution.getVehicleE(2, 7) >= 2);
    assert(solution.getVehicleE(2, 8) >= 2);
    assert(solution.getVehicleE(2, 9) >= 2);
    assert(solution.getVehicleE(2, 10) >= 2);
    assert(solution.getVehicleE(2, 11) >= 2);
    assert(solution.getVehicleE(2, 12) >= 2);
    assert(solution.getVehicleE(2, 13) >= 2);
    assert(solution.getVehicleE(2, 14) >= 2);
    assert(solution.getVehicleE(2, 15) >= 2);
    assert(solution.getVehicleE(2, 16) == 1);
    assert(solution.getVehicleE(2, 17) >= 2);
    assert(solution.getVehicleE(2, 18) >= 2);
    assert(solution.getVehicleE(2, 19) >= 2);

    assert(solution.getVehiclesE()[3].size() == 20);
    assert(solution.getVehicleE(3, 0) >= 2);
    assert(solution.getVehicleE(3, 1) >= 2);
    assert(solution.getVehicleE(3, 2) >= 2);
    assert(solution.getVehicleE(3, 3) >= 2);
    assert(solution.getVehicleE(3, 4) >= 2);
    assert(solution.getVehicleE(3, 5) >= 2);
    assert(solution.getVehicleE(3, 6) >= 2);
    assert(solution.getVehicleE(3, 7) >= 2);
    assert(solution.getVehicleE(3, 8) >= 2);
    assert(solution.getVehicleE(3, 9) >= 2);
    assert(solution.getVehicleE(3, 10) >= 2);
    assert(solution.getVehicleE(3, 11) >= 2);
    assert(solution.getVehicleE(3, 12) >= 2);
    assert(solution.getVehicleE(3, 13) >= 2);
    assert(solution.getVehicleE(3, 14) >= 2);
    assert(solution.getVehicleE(3, 15) >= 2);
    assert(solution.getVehicleE(3, 16) >= 2);
    assert(solution.getVehicleE(3, 17) >= 2);
    assert(solution.getVehicleE(3, 18) >= 2);
    assert(solution.getVehicleE(3, 19) >= 2);

    assert(solution.getVehiclesE()[4].size() == 20);
    assert(solution.getVehicleE(4, 0) >= 2);
    assert(solution.getVehicleE(4, 1) >= 2);
    assert(solution.getVehicleE(4, 2) >= 2);
    assert(solution.getVehicleE(4, 3) >= 2);
    assert(solution.getVehicleE(4, 4) >= 2);
    assert(solution.getVehicleE(4, 5) >= 2);
    assert(solution.getVehicleE(4, 6) == 0);
    assert(solution.getVehicleE(4, 7) >= 2);
    assert(solution.getVehicleE(4, 8) >= 2);
    assert(solution.getVehicleE(4, 9) >= 2);
    assert(solution.getVehicleE(4, 10) >= 2);
    assert(solution.getVehicleE(4, 11) >= 2);
    assert(solution.getVehicleE(4, 12) >= 2);
    assert(solution.getVehicleE(4, 13) >= 2);
    assert(solution.getVehicleE(4, 14) >= 2);
    assert(solution.getVehicleE(4, 15) >= 2);
    assert(solution.getVehicleE(4, 16) >= 2);
    assert(solution.getVehicleE(4, 17) >= 2);
    assert(solution.getVehicleE(4, 18) >= 2);
    assert(solution.getVehicleE(4, 19) >= 2);

    assert(solution.getVehiclesE()[5].size() == 20);
    assert(solution.getVehicleE(5, 0) >= 2);
    assert(solution.getVehicleE(5, 1) >= 2);
    assert(solution.getVehicleE(5, 2) >= 2);
    assert(solution.getVehicleE(5, 3) >= 2);
    assert(solution.getVehicleE(5, 4) >= 2);
    assert(solution.getVehicleE(5, 5) >= 2);
    assert(solution.getVehicleE(5, 6) >= 2);
    assert(solution.getVehicleE(5, 7) >= 2);
    assert(solution.getVehicleE(5, 8) >= 2);
    assert(solution.getVehicleE(5, 9) >= 2);
    assert(solution.getVehicleE(5, 10) >= 2);
    assert(solution.getVehicleE(5, 11) >= 2);
    assert(solution.getVehicleE(5, 12) >= 2);
    assert(solution.getVehicleE(5, 13) == 0);
    assert(solution.getVehicleE(5, 14) >= 2);
    assert(solution.getVehicleE(5, 15) >= 2);
    assert(solution.getVehicleE(5, 16) >= 2);
    assert(solution.getVehicleE(5, 17) >= 2);
    assert(solution.getVehicleE(5, 18) >= 2);
    assert(solution.getVehicleE(5, 19) >= 2);

    assert(solution.getVehiclesE()[6].size() == 20);
    assert(solution.getVehicleE(6, 0) >= 2);
    assert(solution.getVehicleE(6, 1) >= 2);
    assert(solution.getVehicleE(6, 2) >= 2);
    assert(solution.getVehicleE(6, 3) >= 2);
    assert(solution.getVehicleE(6, 4) >= 2);
    assert(solution.getVehicleE(6, 5) >= 2);
    assert(solution.getVehicleE(6, 6) >= 2);
    assert(solution.getVehicleE(6, 7) == 0);
    assert(solution.getVehicleE(6, 8) >= 2);
    assert(solution.getVehicleE(6, 9) >= 2);
    assert(solution.getVehicleE(6, 10) >= 2);
    assert(solution.getVehicleE(6, 11) >= 2);
    assert(solution.getVehicleE(6, 12) >= 2);
    assert(solution.getVehicleE(6, 13) >= 2);
    assert(solution.getVehicleE(6, 14) >= 2);
    assert(solution.getVehicleE(6, 15) >= 2);
    assert(solution.getVehicleE(6, 16) >= 2);
    assert(solution.getVehicleE(6, 17) >= 2);
    assert(solution.getVehicleE(6, 18) >= 2);
    assert(solution.getVehicleE(6, 19) >= 2);

    assert(solution.getVehiclesE()[7].size() == 20);
    assert(solution.getVehicleE(7, 0) >= 2);
    assert(solution.getVehicleE(7, 1) >= 2);
    assert(solution.getVehicleE(7, 2) >= 2);
    assert(solution.getVehicleE(7, 3) >= 2);
    assert(solution.getVehicleE(7, 4) >= 2);
    assert(solution.getVehicleE(7, 5) == 0);
    assert(solution.getVehicleE(7, 6) >= 2);
    assert(solution.getVehicleE(7, 7) >= 2);
    assert(solution.getVehicleE(7, 8) >= 2);
    assert(solution.getVehicleE(7, 9) >= 2);
    assert(solution.getVehicleE(7, 10) >= 2);
    assert(solution.getVehicleE(7, 11) >= 2);
    assert(solution.getVehicleE(7, 12) >= 2);
    assert(solution.getVehicleE(7, 13) >= 2);
    assert(solution.getVehicleE(7, 14) >= 2);
    assert(solution.getVehicleE(7, 15) >= 2);
    assert(solution.getVehicleE(7, 16) >= 2);
    assert(solution.getVehicleE(7, 17) >= 2);
    assert(solution.getVehicleE(7, 18) >= 2);
    assert(solution.getVehicleE(7, 19) >= 2);

    assert(solution.getVehiclesE()[8].size() == 20);
    assert(solution.getVehicleE(8, 0) >= 2);
    assert(solution.getVehicleE(8, 1) >= 2);
    assert(solution.getVehicleE(8, 2) >= 2);
    assert(solution.getVehicleE(8, 3) >= 2);
    assert(solution.getVehicleE(8, 4) >= 2);
    assert(solution.getVehicleE(8, 5) >= 2);
    assert(solution.getVehicleE(8, 6) >= 2);
    assert(solution.getVehicleE(8, 7) >= 2);
    assert(solution.getVehicleE(8, 8) >= 2);
    assert(solution.getVehicleE(8, 9) >= 2);
    assert(solution.getVehicleE(8, 10) >= 2);
    assert(solution.getVehicleE(8, 11) >= 2);
    assert(solution.getVehicleE(8, 12) >= 2);
    assert(solution.getVehicleE(8, 13) >= 2);
    assert(solution.getVehicleE(8, 14) >= 2);
    assert(solution.getVehicleE(8, 15) >= 2);
    assert(solution.getVehicleE(8, 16) >= 2);
    assert(solution.getVehicleE(8, 17) >= 2);
    assert(solution.getVehicleE(8, 18) >= 2);
    assert(solution.getVehicleE(8, 19) >= 2);

    assert(solution.getVehiclesE()[9].size() == 20);
    assert(solution.getVehicleE(9, 0) >= 2);
    assert(solution.getVehicleE(9, 1) >= 2);
    assert(solution.getVehicleE(9, 2) >= 2);
    assert(solution.getVehicleE(9, 3) >= 2);
    assert(solution.getVehicleE(9, 4) >= 2);
    assert(solution.getVehicleE(9, 5) >= 2);
    assert(solution.getVehicleE(9, 6) >= 2);
    assert(solution.getVehicleE(9, 7) >= 2);
    assert(solution.getVehicleE(9, 8) >= 2);
    assert(solution.getVehicleE(9, 9) >= 2);
    assert(solution.getVehicleE(9, 10) >= 2);
    assert(solution.getVehicleE(9, 11) >= 2);
    assert(solution.getVehicleE(9, 12) >= 2);
    assert(solution.getVehicleE(9, 13) >= 2);
    assert(solution.getVehicleE(9, 14) >= 2);
    assert(solution.getVehicleE(9, 15) >= 2);
    assert(solution.getVehicleE(9, 16) >= 2);
    assert(solution.getVehicleE(9, 17) >= 2);
    assert(solution.getVehicleE(9, 18) >= 2);
    assert(solution.getVehicleE(9, 19) >= 2);

    assert(solution.getVehiclesE()[10].size() == 20);
    assert(solution.getVehicleE(10, 0) >= 2);
    assert(solution.getVehicleE(10, 1) >= 2);
    assert(solution.getVehicleE(10, 2) >= 2);
    assert(solution.getVehicleE(10, 3) >= 2);
    assert(solution.getVehicleE(10, 4) >= 2);
    assert(solution.getVehicleE(10, 5) >= 2);
    assert(solution.getVehicleE(10, 6) >= 2);
    assert(solution.getVehicleE(10, 7) >= 2);
    assert(solution.getVehicleE(10, 8) >= 2);
    assert(solution.getVehicleE(10, 9) >= 2);
    assert(solution.getVehicleE(10, 10) >= 2);
    assert(solution.getVehicleE(10, 11) == 0);
    assert(solution.getVehicleE(10, 12) >= 2);
    assert(solution.getVehicleE(10, 13) >= 2);
    assert(solution.getVehicleE(10, 14) >= 2);
    assert(solution.getVehicleE(10, 15) >= 2);
    assert(solution.getVehicleE(10, 16) >= 2);
    assert(solution.getVehicleE(10, 17) >= 2);
    assert(solution.getVehicleE(10, 18) >= 2);
    assert(solution.getVehicleE(10, 19) >= 2);

    assert(solution.getVehiclesE()[11].size() == 20);
    assert(solution.getVehicleE(11, 0) >= 2);
    assert(solution.getVehicleE(11, 1) >= 2);
    assert(solution.getVehicleE(11, 2) >= 2);
    assert(solution.getVehicleE(11, 3) >= 2);
    assert(solution.getVehicleE(11, 4) >= 2);
    assert(solution.getVehicleE(11, 5) >= 2);
    assert(solution.getVehicleE(11, 6) >= 2);
    assert(solution.getVehicleE(11, 7) >= 2);
    assert(solution.getVehicleE(11, 8) >= 2);
    assert(solution.getVehicleE(11, 9) >= 2);
    assert(solution.getVehicleE(11, 10) >= 2);
    assert(solution.getVehicleE(11, 11) >= 2);
    assert(solution.getVehicleE(11, 12) == 0);
    assert(solution.getVehicleE(11, 13) >= 2);
    assert(solution.getVehicleE(11, 14) >= 2);
    assert(solution.getVehicleE(11, 15) >= 2);
    assert(solution.getVehicleE(11, 16) >= 2);
    assert(solution.getVehicleE(11, 17) >= 2);
    assert(solution.getVehicleE(11, 18) >= 2);
    assert(solution.getVehicleE(11, 19) >= 2);

    assert(solution.getVehiclesE()[12].size() == 20);
    assert(solution.getVehicleE(12, 0) >= 2);
    assert(solution.getVehicleE(12, 1) >= 2);
    assert(solution.getVehicleE(12, 2) >= 2);
    assert(solution.getVehicleE(12, 3) >= 2);
    assert(solution.getVehicleE(12, 4) == 0);
    assert(solution.getVehicleE(12, 5) >= 2);
    assert(solution.getVehicleE(12, 6) >= 2);
    assert(solution.getVehicleE(12, 7) >= 2);
    assert(solution.getVehicleE(12, 8) >= 2);
    assert(solution.getVehicleE(12, 9) >= 2);
    assert(solution.getVehicleE(12, 10) >= 2);
    assert(solution.getVehicleE(12, 11) >= 2);
    assert(solution.getVehicleE(12, 12) >= 2);
    assert(solution.getVehicleE(12, 13) >= 2);
    assert(solution.getVehicleE(12, 14) >= 2);
    assert(solution.getVehicleE(12, 15) >= 2);
    assert(solution.getVehicleE(12, 16) >= 2);
    assert(solution.getVehicleE(12, 17) >= 2);
    assert(solution.getVehicleE(12, 18) >= 2);
    assert(solution.getVehicleE(12, 19) >= 2);

    assert(solution.getVehiclesE()[13].size() == 20);
    assert(solution.getVehicleE(13, 0) >= 2);
    assert(solution.getVehicleE(13, 1) == 0);
    assert(solution.getVehicleE(13, 2) >= 2);
    assert(solution.getVehicleE(13, 3) >= 2);
    assert(solution.getVehicleE(13, 4) >= 2);
    assert(solution.getVehicleE(13, 5) >= 2);
    assert(solution.getVehicleE(13, 6) >= 2);
    assert(solution.getVehicleE(13, 7) >= 2);
    assert(solution.getVehicleE(13, 8) >= 2);
    assert(solution.getVehicleE(13, 9) >= 2);
    assert(solution.getVehicleE(13, 10) >= 2);
    assert(solution.getVehicleE(13, 11) >= 2);
    assert(solution.getVehicleE(13, 12) >= 2);
    assert(solution.getVehicleE(13, 13) >= 2);
    assert(solution.getVehicleE(13, 14) >= 2);
    assert(solution.getVehicleE(13, 15) >= 2);
    assert(solution.getVehicleE(13, 16) >= 2);
    assert(solution.getVehicleE(13, 17) >= 2);
    assert(solution.getVehicleE(13, 18) >= 2);
    assert(solution.getVehicleE(13, 19) >= 2);

    assert(solution.getVehiclesE()[14].size() == 20);
    assert(solution.getVehicleE(14, 0) >= 2);
    assert(solution.getVehicleE(14, 1) >= 2);
    assert(solution.getVehicleE(14, 2) >= 2);
    assert(solution.getVehicleE(14, 3) >= 2);
    assert(solution.getVehicleE(14, 4) >= 2);
    assert(solution.getVehicleE(14, 5) >= 2);
    assert(solution.getVehicleE(14, 6) >= 2);
    assert(solution.getVehicleE(14, 7) >= 2);
    assert(solution.getVehicleE(14, 8) >= 2);
    assert(solution.getVehicleE(14, 9) >= 2);
    assert(solution.getVehicleE(14, 10) >= 2);
    assert(solution.getVehicleE(14, 11) >= 2);
    assert(solution.getVehicleE(14, 12) >= 2);
    assert(solution.getVehicleE(14, 13) >= 2);
    assert(solution.getVehicleE(14, 14) >= 2);
    assert(solution.getVehicleE(14, 15) == 1);
    assert(solution.getVehicleE(14, 16) >= 2);
    assert(solution.getVehicleE(14, 17) >= 2);
    assert(solution.getVehicleE(14, 18) >= 2);
    assert(solution.getVehicleE(14, 19) >= 2);

    assert(solution.getVehiclesE()[15].size() == 20);
    assert(solution.getVehicleE(15, 0) >= 2);
    assert(solution.getVehicleE(15, 1) >= 2);
    assert(solution.getVehicleE(15, 2) >= 2);
    assert(solution.getVehicleE(15, 3) >= 2);
    assert(solution.getVehicleE(15, 4) >= 2);
    assert(solution.getVehicleE(15, 5) >= 2);
    assert(solution.getVehicleE(15, 6) >= 2);
    assert(solution.getVehicleE(15, 7) >= 2);
    assert(solution.getVehicleE(15, 8) >= 2);
    assert(solution.getVehicleE(15, 9) >= 2);
    assert(solution.getVehicleE(15, 10) >= 2);
    assert(solution.getVehicleE(15, 11) >= 2);
    assert(solution.getVehicleE(15, 12) >= 2);
    assert(solution.getVehicleE(15, 13) >= 2);
    assert(solution.getVehicleE(15, 14) >= 2);
    assert(solution.getVehicleE(15, 15) >= 2);
    assert(solution.getVehicleE(15, 16) >= 2);
    assert(solution.getVehicleE(15, 17) == 1);
    assert(solution.getVehicleE(15, 18) >= 2);
    assert(solution.getVehicleE(15, 19) >= 2);

    assert(solution.getVehiclesE()[16].size() == 20);
    assert(solution.getVehicleE(16, 0) >= 2);
    assert(solution.getVehicleE(16, 1) >= 2);
    assert(solution.getVehicleE(16, 2) >= 2);
    assert(solution.getVehicleE(16, 3) >= 2);
    assert(solution.getVehicleE(16, 4) >= 2);
    assert(solution.getVehicleE(16, 5) >= 2);
    assert(solution.getVehicleE(16, 6) >= 2);
    assert(solution.getVehicleE(16, 7) >= 2);
    assert(solution.getVehicleE(16, 8) >= 2);
    assert(solution.getVehicleE(16, 9) >= 2);
    assert(solution.getVehicleE(16, 10) >= 2);
    assert(solution.getVehicleE(16, 11) >= 2);
    assert(solution.getVehicleE(16, 12) >= 2);
    assert(solution.getVehicleE(16, 13) >= 2);
    assert(solution.getVehicleE(16, 14) >= 2);
    assert(solution.getVehicleE(16, 15) >= 2);
    assert(solution.getVehicleE(16, 16) >= 2);
    assert(solution.getVehicleE(16, 17) >= 2);
    assert(solution.getVehicleE(16, 18) == 1);
    assert(solution.getVehicleE(16, 19) >= 2);

    assert(solution.getVehiclesE()[17].size() == 20);
    assert(solution.getVehicleE(17, 0) >= 2);
    assert(solution.getVehicleE(17, 1) >= 2);
    assert(solution.getVehicleE(17, 2) >= 2);
    assert(solution.getVehicleE(17, 3) == 1);
    assert(solution.getVehicleE(17, 4) >= 2);
    assert(solution.getVehicleE(17, 5) >= 2);
    assert(solution.getVehicleE(17, 6) >= 2);
    assert(solution.getVehicleE(17, 7) >= 2);
    assert(solution.getVehicleE(17, 8) >= 2);
    assert(solution.getVehicleE(17, 9) >= 2);
    assert(solution.getVehicleE(17, 10) >= 2);
    assert(solution.getVehicleE(17, 11) >= 2);
    assert(solution.getVehicleE(17, 12) >= 2);
    assert(solution.getVehicleE(17, 13) >= 2);
    assert(solution.getVehicleE(17, 14) >= 2);
    assert(solution.getVehicleE(17, 15) >= 2);
    assert(solution.getVehicleE(17, 16) >= 2);
    assert(solution.getVehicleE(17, 17) >= 2);
    assert(solution.getVehicleE(17, 18) >= 2);
    assert(solution.getVehicleE(17, 19) >= 2);

    assert(solution.getVehiclesE()[18].size() == 20);
    assert(solution.getVehicleE(18, 0) >= 2);
    assert(solution.getVehicleE(18, 1) >= 2);
    assert(solution.getVehicleE(18, 2) >= 2);
    assert(solution.getVehicleE(18, 3) >= 2);
    assert(solution.getVehicleE(18, 4) >= 2);
    assert(solution.getVehicleE(18, 5) >= 2);
    assert(solution.getVehicleE(18, 6) >= 2);
    assert(solution.getVehicleE(18, 7) >= 2);
    assert(solution.getVehicleE(18, 8) >= 2);
    assert(solution.getVehicleE(18, 9) >= 2);
    assert(solution.getVehicleE(18, 10) >= 2);
    assert(solution.getVehicleE(18, 11) >= 2);
    assert(solution.getVehicleE(18, 12) >= 2);
    assert(solution.getVehicleE(18, 13) >= 2);
    assert(solution.getVehicleE(18, 14) >= 2);
    assert(solution.getVehicleE(18, 15) >= 2);
    assert(solution.getVehicleE(18, 16) >= 2);
    assert(solution.getVehicleE(18, 17) >= 2);
    assert(solution.getVehicleE(18, 18) >= 2);
    assert(solution.getVehicleE(18, 19) == 1);

    assert(solution.getVehiclesE()[19].size() == 20);
    assert(solution.getVehicleE(19, 0) >= 2);
    assert(solution.getVehicleE(19, 1) >= 2);
    assert(solution.getVehicleE(19, 2) >= 2);
    assert(solution.getVehicleE(19, 3) >= 2);
    assert(solution.getVehicleE(19, 4) >= 2);
    assert(solution.getVehicleE(19, 5) >= 2);
    assert(solution.getVehicleE(19, 6) >= 2);
    assert(solution.getVehicleE(19, 7) >= 2);
    assert(solution.getVehicleE(19, 8) >= 2);
    assert(solution.getVehicleE(19, 9) >= 2);
    assert(solution.getVehicleE(19, 10) >= 2);
    assert(solution.getVehicleE(19, 11) >= 2);
    assert(solution.getVehicleE(19, 12) >= 2);
    assert(solution.getVehicleE(19, 13) >= 2);
    assert(solution.getVehicleE(19, 14) == 1);
    assert(solution.getVehicleE(19, 15) >= 2);
    assert(solution.getVehicleE(19, 16) >= 2);
    assert(solution.getVehicleE(19, 17) >= 2);
    assert(solution.getVehicleE(19, 18) >= 2);
    assert(solution.getVehicleE(19, 19) >= 2);

    assert(solution.getRequestsK().size() == 2);

    assert(solution.getRequestsK(0).size() == 4);
    assert(solution.getRequestsK(0).find(0) != solution.getRequestsK(0).end());
    assert(solution.getRequestsK(0).find(1) != solution.getRequestsK(0).end());
    assert(solution.getRequestsK(0).find(3) != solution.getRequestsK(0).end());
    assert(solution.getRequestsK(0).find(4) != solution.getRequestsK(0).end());

    assert(solution.getRequestsK(1).size() == 3);
    assert(solution.getRequestsK(1).find(5) != solution.getRequestsK(1).end());
    assert(solution.getRequestsK(1).find(6) != solution.getRequestsK(1).end());
    assert(solution.getRequestsK(1).find(7) != solution.getRequestsK(1).end());

    assert(solution.getIndexesKV().size() == 2);

    assert(solution.getIndexesKV()[0].size() == 20);
    assert(solution.getIndexKV(0, 0) == 0);
    assert(solution.getIndexKV(0, 1) == 9);
    assert(solution.getIndexKV(0, 2) >= 10);
    assert(solution.getIndexKV(0, 3) >= 10);
    assert(solution.getIndexKV(0, 4) == 4);
    assert(solution.getIndexKV(0, 5) == 7);
    assert(solution.getIndexKV(0, 6) == 5);
    assert(solution.getIndexKV(0, 7) == 6);
    assert(solution.getIndexKV(0, 8) >= 10);
    assert(solution.getIndexKV(0, 9) >= 10);
    assert(solution.getIndexKV(0, 10) == 1);
    assert(solution.getIndexKV(0, 11) == 2);
    assert(solution.getIndexKV(0, 12) == 3);
    assert(solution.getIndexKV(0, 13) == 8);
    assert(solution.getIndexKV(0, 14) >= 10);
    assert(solution.getIndexKV(0, 15) >= 10);
    assert(solution.getIndexKV(0, 16) >= 10);
    assert(solution.getIndexKV(0, 17) >= 10);
    assert(solution.getIndexKV(0, 18) >= 10);
    assert(solution.getIndexKV(0, 19) >= 10);

    assert(solution.getIndexesKV()[1].size() == 20);
    assert(solution.getIndexKV(1, 0) >= 8);
    assert(solution.getIndexKV(1, 1) >= 8);
    assert(solution.getIndexKV(1, 2) == 0);
    assert(solution.getIndexKV(1, 3) == 7);
    assert(solution.getIndexKV(1, 4) >= 8);
    assert(solution.getIndexKV(1, 5) >= 8);
    assert(solution.getIndexKV(1, 6) >= 8);
    assert(solution.getIndexKV(1, 7) >= 8);
    assert(solution.getIndexKV(1, 8) >= 8);
    assert(solution.getIndexKV(1, 9) >= 8);
    assert(solution.getIndexKV(1, 10) >= 8);
    assert(solution.getIndexKV(1, 11) >= 8);
    assert(solution.getIndexKV(1, 12) >= 8);
    assert(solution.getIndexKV(1, 13) >= 8);
    assert(solution.getIndexKV(1, 14) == 4);
    assert(solution.getIndexKV(1, 15) == 5);
    assert(solution.getIndexKV(1, 16) == 1);
    assert(solution.getIndexKV(1, 17) == 6);
    assert(solution.getIndexKV(1, 18) == 2);
    assert(solution.getIndexKV(1, 19) == 3);

    return 0;
}

